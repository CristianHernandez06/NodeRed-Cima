[
    {
        "id": "fa4185535df52994",
        "type": "tab",
        "label": "CLIMA",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c30905023d6403ac",
        "type": "subflow",
        "name": "Check Alertas AQUACHILE",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 280,
                "wires": [
                    {
                        "id": "b2880a5ba18e1c90"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1260,
                "y": 260,
                "wires": [
                    {
                        "id": "79255b3b293e077b",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "8961eccb37d0e87e",
        "type": "subflow",
        "name": "MQTT-AQUACHILE",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 240,
                "wires": [
                    {
                        "id": "ff59fde96b9bf683"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1280,
                "y": 220,
                "wires": [
                    {
                        "id": "8a958f6d300aaf15",
                        "port": 0
                    },
                    {
                        "id": "395d049d3104bfcf",
                        "port": 0
                    },
                    {
                        "id": "16a41066df8bedc4",
                        "port": 0
                    },
                    {
                        "id": "c1a5cab9de72e623",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "f078a67cbe928df7",
        "type": "subflow",
        "name": "Check Alertas MOWI",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 280,
                "wires": [
                    {
                        "id": "9a350b8af2e6a369"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1240,
                "y": 260,
                "wires": [
                    {
                        "id": "6dac212e34757bf6",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "deba94ca834b3996",
        "type": "subflow",
        "name": "MQTT - MOWI",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 260,
                "wires": [
                    {
                        "id": "43989a92f1412923"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1200,
                "y": 180,
                "wires": [
                    {
                        "id": "013ef3552d0c60d4",
                        "port": 0
                    },
                    {
                        "id": "32f8a9183c1e184f",
                        "port": 0
                    },
                    {
                        "id": "76e7fc331f33c306",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "dba1caaf6dda045a",
        "type": "subflow",
        "name": "Check Alertas GMT",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 420,
                "wires": [
                    {
                        "id": "29d45c4ba9d70e85"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1280,
                "y": 180,
                "wires": [
                    {
                        "id": "ebc8f46712368178",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "a68f9a56f13d9015",
        "type": "subflow",
        "name": "notificaciones alertas",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 220,
                "wires": [
                    {
                        "id": "ab372a79b385ad04"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 880,
                "y": 160,
                "wires": [
                    {
                        "id": "3d2e89e681781547",
                        "port": 0
                    }
                ]
            },
            {
                "x": 880,
                "y": 220,
                "wires": [
                    {
                        "id": "6bdc92ecd1033d28",
                        "port": 0
                    }
                ]
            },
            {
                "x": 880,
                "y": 300,
                "wires": [
                    {
                        "id": "587d88a105159738",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "d4ab397b32bf790c",
        "type": "subflow",
        "name": "Check Alertas",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 200,
                "wires": [
                    {
                        "id": "a0bae8326f139154"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1200,
                "y": 180,
                "wires": [
                    {
                        "id": "8e5d552fd08a924e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "6ba6005971c4fd53",
        "type": "subflow",
        "name": "MQTT-AST",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 280,
                "wires": [
                    {
                        "id": "605d50aa9ff2af2e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1240,
                "y": 240,
                "wires": [
                    {
                        "id": "3796d08a852c78a8",
                        "port": 0
                    },
                    {
                        "id": "14a06565213197d2",
                        "port": 0
                    },
                    {
                        "id": "25c3cf14b212df47",
                        "port": 0
                    },
                    {
                        "id": "76588ed854556a84",
                        "port": 0
                    },
                    {
                        "id": "3de2fdd2c347a44c",
                        "port": 0
                    },
                    {
                        "id": "e9339d981059a085",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b8a2caa810fe59fd",
        "type": "subflow",
        "name": "MQTT-GMT",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 260,
                "wires": [
                    {
                        "id": "7cce94cb084ad42d"
                    },
                    {
                        "id": "13e102d42bcee8f0"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1180,
                "y": 160,
                "wires": [
                    {
                        "id": "977c9bd2612d61cc",
                        "port": 0
                    },
                    {
                        "id": "eec10100e5aa01c6",
                        "port": 0
                    },
                    {
                        "id": "b831d562b4228bbb",
                        "port": 0
                    },
                    {
                        "id": "de61d5747d3099e4",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "887ae0d1a8656db5",
        "type": "subflow",
        "name": "Check Alertas AQUACHILE (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 280,
                "wires": [
                    {
                        "id": "385724e70eb586c2"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1260,
                "y": 260,
                "wires": [
                    {
                        "id": "7d3b8e8200abfc53",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "adde387b97c1cef1",
        "type": "subflow",
        "name": "MQTT-AQUACHILE (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 240,
                "wires": [
                    {
                        "id": "2ae491a0deac6ab6"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1280,
                "y": 220,
                "wires": [
                    {
                        "id": "7b8756d2aca28cec",
                        "port": 0
                    },
                    {
                        "id": "54bf812325febb96",
                        "port": 0
                    },
                    {
                        "id": "e9afe83d1fdf8fa8",
                        "port": 0
                    },
                    {
                        "id": "854d734d9c24e39a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "bf38bc9e8a01a671",
        "type": "subflow",
        "name": "Check Alertas MOWI (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 280,
                "wires": [
                    {
                        "id": "02d458d7188790f8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1240,
                "y": 260,
                "wires": [
                    {
                        "id": "c9c665ee0e1cf172",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "1bfaf0ee9cf5edea",
        "type": "subflow",
        "name": "MQTT - MOWI (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 260,
                "wires": [
                    {
                        "id": "878928a8e0ffa78f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1200,
                "y": 180,
                "wires": [
                    {
                        "id": "56dfc1f84a1d374d",
                        "port": 0
                    },
                    {
                        "id": "48fc0ecd22a66df2",
                        "port": 0
                    },
                    {
                        "id": "7cefe174b9c9ae6d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "546efd75fe681e29",
        "type": "subflow",
        "name": "Check Alertas GMT (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 420,
                "wires": [
                    {
                        "id": "518968bd7cf65156"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1280,
                "y": 180,
                "wires": [
                    {
                        "id": "bf58f7c504f7a37c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "d2c65b34ecc66d63",
        "type": "subflow",
        "name": "Check Alertas (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 200,
                "wires": [
                    {
                        "id": "754de5eed2a87894"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1200,
                "y": 180,
                "wires": [
                    {
                        "id": "ce998a2a76b1543f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "71984a1f6af3998c",
        "type": "subflow",
        "name": "MQTT-AST (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 280,
                "wires": [
                    {
                        "id": "72d06a195e5b3e08"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1240,
                "y": 240,
                "wires": [
                    {
                        "id": "ed13abe58c0ac5f4",
                        "port": 0
                    },
                    {
                        "id": "6b0a6bd6a238fe28",
                        "port": 0
                    },
                    {
                        "id": "b5e44ea6748b355f",
                        "port": 0
                    },
                    {
                        "id": "a19cff62828df253",
                        "port": 0
                    },
                    {
                        "id": "f747204bd20dfbbe",
                        "port": 0
                    },
                    {
                        "id": "2bf8e2661cce7e61",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "9eba7b0c87f20961",
        "type": "subflow",
        "name": "MQTT-GMT (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 260,
                "wires": [
                    {
                        "id": "28d6d863981eb37c"
                    },
                    {
                        "id": "a849768cf3524ab7"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1180,
                "y": 160,
                "wires": [
                    {
                        "id": "b4a90b7780db6013",
                        "port": 0
                    },
                    {
                        "id": "775a70b7641f4a85",
                        "port": 0
                    },
                    {
                        "id": "de59143b6d6f7664",
                        "port": 0
                    },
                    {
                        "id": "62675e4d59677c70",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "a78027c8bc216efb",
        "type": "mongodb-config",
        "z": "c30905023d6403ac",
        "name": "wisensor_aquachile",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_aquachile",
        "collections": [
            {
                "name": "clima",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "alertas_clima",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "bbda773e6fda6e97",
        "type": "mongodb-config",
        "z": "8961eccb37d0e87e",
        "name": "wisensor_aquachile",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_aquachile",
        "collections": [
            {
                "name": "clima",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "biomasa",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "pasadores",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "5ad0d1c479dfd0a1",
        "type": "mongodb-config",
        "z": "f078a67cbe928df7",
        "name": "wisensor_mowi",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_mowi",
        "collections": [
            {
                "name": "clima",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "clima_alertas",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "alertas_clima",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "6d735218d9f8c1cc",
        "type": "mongodb-config",
        "z": "deba94ca834b3996",
        "name": "wisensor_mowi",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_mowi",
        "collections": [
            {
                "name": "clima",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "pasadores",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "energia",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "biomasa",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "alertas_clima",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "e8b513b0daf9a8a1",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "wisensor",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "babdb35fd23914fd",
        "type": "mongodb-config",
        "name": "wisensor_ast",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_ast",
        "collections": [
            {
                "name": "clima",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "biomasa",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "energia",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "pasadores",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "sensores_iot",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "clima_alertas",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_zona",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "trencito",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "aea86e27262eaf28",
        "type": "mongodb-config",
        "name": "wisensor_gmt",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_gmt",
        "collections": [
            {
                "name": "clima",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "energia",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "biomasa",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "sensores-iot",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "pasadores",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_detalle",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "alertas_clima",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "seguridad_zona",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "70f45d5a7f5d68bb",
        "type": "mqtt-broker",
        "name": "Servidor AST",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "d4811ab7395e34dc",
        "type": "mqtt-broker",
        "name": "",
        "broker": "172.16.10.18",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "f8d583349e2ec5d4",
        "type": "mqtt-broker",
        "name": "",
        "broker": "172.15.10.18",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "06f0cbf65e503a4c",
        "type": "mongodb-config",
        "z": "887ae0d1a8656db5",
        "name": "wisensor_aquachile",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_aquachile",
        "collections": [
            {
                "name": "clima",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "alertas_clima",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "6f054d21ac5818c5",
        "type": "mongodb-config",
        "z": "adde387b97c1cef1",
        "name": "wisensor_aquachile",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_aquachile",
        "collections": [
            {
                "name": "clima",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "biomasa",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "pasadores",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "cdbd46fb8c8e74a1",
        "type": "mongodb-config",
        "z": "bf38bc9e8a01a671",
        "name": "wisensor_mowi",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_mowi",
        "collections": [
            {
                "name": "clima",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "clima_alertas",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "alertas_clima",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "36fee6712aa1cef4",
        "type": "mongodb-config",
        "z": "1bfaf0ee9cf5edea",
        "name": "wisensor_mowi",
        "host": "10.10.7.41",
        "port": "27017",
        "database": "wisensor_mowi",
        "collections": [
            {
                "name": "clima",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "pasadores",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "energia",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "biomasa",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            },
            {
                "name": "alertas_clima",
                "optionsType": "json",
                "options": "{}",
                "autoCreate": true,
                "autoCreateOptionsType": "json",
                "autoCreateOptions": "{}",
                "autoCreateIndexesType": "json",
                "autoCreateIndexes": "[]"
            }
        ],
        "options": ""
    },
    {
        "id": "b2880a5ba18e1c90",
        "type": "switch",
        "z": "c30905023d6403ac",
        "name": "filter collection",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "clima",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sensores",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "energia",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad_detalle",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 220,
        "y": 280,
        "wires": [
            [
                "c048c98fd3cc4a7b"
            ],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "c048c98fd3cc4a7b",
        "type": "function",
        "z": "c30905023d6403ac",
        "name": "set _id",
        "func": "var id = msg.payload;\nmsg.query = {\n    _id: id\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "mongodb",
                "module": "mongodb"
            }
        ],
        "x": 410,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "03a2bba158ee777a",
        "type": "function",
        "z": "c30905023d6403ac",
        "name": "Select alertas",
        "func": "var data = msg.payload[0];\nvar basedatos = 'wisensor_aquachile';\nvar codigo_empresa = data.empresa;\nvar codigo_centro = data.codigo_centro;\n\nvar query = \"SELECT  a.id as alerta_id, e.mongodb, e.codigo as codigo_empresa, cc.codigo_interno, a.created_at as fecha,  cc.latitud, cc.longitud, cc.heading_inicial,\" +\n\"sv.nombre_real, a.tipo_alerta, cc.ip_port, a.tipo_dato, a.valor1, a.valor2, a.valor3, a.valor4, a.checkemail, a.checkbuzzer, a.centros_id, sv.nombre_visible, sv.simbolo, c.nombre\" +\n\" FROM clima_alertas AS a\" +\n\" INNER JOIN centros AS c ON a.centros_id = c.id\" +\n\" INNER JOIN empresas AS e ON c.empresas_id = e.id\" +\n\" INNER JOIN sistema_variables AS sv ON a.sistema_variables_id = sv.id\" +\n\" INNER JOIN centros_concesiones AS cc ON a.centros_id = cc.centros_id\" +\n\" WHERE a.activo = 1 \" +\n\" AND c.activo = 1\" +\n\" AND a.activo = 1\" +\n\" AND cc.activo = 1\" +\n\" AND e.mongodb = '\"+basedatos +\"' \"+\n\" AND cc.codigo_interno = '\" + codigo_centro + \"' \" +\n\" AND e.codigo = '\" + codigo_empresa + \"' \" +\n\" AND a.deleted_at IS NULL\" +\n\" AND c.deleted_at IS NULL\"+\n\" AND e.deleted_at IS NULL\";\nmsg.topic = query;\nmsg.data = data;\nreturn msg; \n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 180,
        "wires": [
            [
                "df5a417c21fe8a3e"
            ]
        ]
    },
    {
        "id": "0a984151f3fad9e4",
        "type": "function",
        "z": "c30905023d6403ac",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 180,
        "wires": [
            [
                "03a2bba158ee777a"
            ]
        ]
    },
    {
        "id": "61e5146054a95d7a",
        "type": "function",
        "z": "c30905023d6403ac",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 260,
        "wires": [
            [
                "723ba13bc858a69b"
            ]
        ]
    },
    {
        "id": "723ba13bc858a69b",
        "type": "function",
        "z": "c30905023d6403ac",
        "name": "loop and search",
        "func": "var newMsg = [];\nvar arr = msg.payload;\nvar alerta = [];\nvar datos = msg.data;\n\nfor (var i = 0; i < arr.length; i++) {\n    alerta.push({\n        alerta_id: arr[i].alerta_id,\n        fecha: new moment(arr[i].fecha).format(\"YYYY-MM-DD\"),\n        mongodb: arr[i].mongodb,\n        codigo_empresa: arr[i].codigo_empresa,\n        codigo_interno: arr[i].codigo_interno,\n        variable: arr[i].nombre_real,\n        tipo_alerta: arr[i].tipo_alerta,\n        tipo_dato: arr[i].tipo_dato,\n        latitud: arr[i].latitud,\n        longitud: arr[i].longitud,\n        heading_inicial: arr[i].heading_inicial,\n        valor1: arr[i].valor1,\n        valor2: arr[i].valor2,\n        valor3: arr[i].valor3,\n        valor4: arr[i].valor4,  \n        checkemail: arr[i].checkemail,  \n        checkbuzzer: arr[i].checkbuzzer, \n        centros_id: arr[i].centros_id,\n        ip_port: arr[i].ip_port,\n        nombre_visible: arr[i].nombre_visible,\n        simbolo: arr[i].simbolo,\n        centro: arr[i].nombre\n    });    \n}\nnewMsg.push({\n    data: datos,\n    alertas: alerta\n});\n\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 700,
        "y": 260,
        "wires": [
            [
                "5f555d4a668ba3fc"
            ]
        ]
    },
    {
        "id": "5f555d4a668ba3fc",
        "type": "function",
        "z": "c30905023d6403ac",
        "name": "Insertar si no existe",
        "func": "var qry_insert = '';\nvar newMsg = [];\nvar alertas = msg.alertas;\nvar arr = msg.data;\nvar notificacion = [];\n\nfor (let index = 0; index < alertas.length; index++) {\n    var alerta_id = alertas[index].alerta_id;\n    var variable = alertas[index].variable;\n    var variable_visible = alertas[index].nombre_visible;\n    var simbolo = alertas[index].simbolo;\n    var database = alertas[index].mongodb;\n    var tipo_dato = alertas[index].tipo_dato;\n    var valor1 = alertas[index].valor1;\n    var valor2 = alertas[index].valor2;\n    var valor3 = alertas[index].valor3;\n    var valor4 = alertas[index].valor4;\n    var tipo_alerta = alertas[index].tipo_alerta;\n    var ip_port = alertas[index].ip_port;\n    var centro = alertas[index].centro;\n\n    var checkemail = alertas[index].checkemail;\n    var checkbuzzer = alertas[index].checkbuzzer; \n    var centros_id = alertas[index].centros_id; \n    var checksms = 1;\n\n    var latitud = alertas[index].latitud;\n    var longitud = alertas[index].longitud;\n\n    switch (tipo_dato) {\n        case 'Integer':\n            valor1 = parseInt(valor1);\n            valor2 = parseInt(valor2);\n            valor3 = valor3 != null ? parseInt(valor3) : null;\n            valor4 = valor4 != null ? parseInt(valor4) : null;\n            break;\n        case 'Float':\n            valor1 = parseFloat(valor1);\n            valor2 = parseFloat(valor2);\n            valor3 = valor3 != null ? parseFloat(valor3) : null;\n            valor4 = valor4 != null ? parseFloat(valor4) : null;\n            break;\n    }\n\n    var severidad = '';\n    if (variable == 'desviacionGPS') {\n        if (tipo_alerta == 'Simple'){\n            var long = arr.datos[variable].coordinates[0];\n            var latit = arr.datos[variable].coordinates[1];\n            var distancia = geolib.getPreciseDistance(\n                { latitude: latitud, longitude: longitud },\n                { latitude: latit, longitude: long },\n            );\n            if (valor1 > 0) {\n                //positivo\n                if (distancia >= valor1) {\n                    severidad = 'Rojo';\n                } else {\n                    if (distancia >= valor2 && distancia < valor1) {\n                        severidad = 'Amarillo';\n                    } else {\n                        severidad = 'Verde';\n                    }\n                }\n            }\n\n            if (severidad != 'Verde' && severidad != '') {\n                var unid = '';\n                var dist = 0;\n                if(distancia < 1000){\n                    unid = 'm';\n                    dist = distancia;\n                } else {\n                    unid = 'km';\n                    dist = geolib.convertDistance(distancia, 'km');\n                }\n                notificacion = {\n                    centro: centro,\n                    variable: variable_visible,\n                    valor: dist,\n                    unidad_medida: unid,\n                    fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                    severidad: severidad\n                };\n                \n                qry_insert = {\n                    clima_alertas_id: alerta_id,\n                    mongodb_id: String(arr._id),\n                    severidad: severidad,\n                    fecha: arr.fecha,\n                    visto: false,\n                    users_id: null,\n                    respuestas_alertas_id: null,\n                    comentario: ''\n                };\n\n                newMsg.push({\n                    insert_data: qry_insert,\n                    checkemail: checkemail,\n                    checkbuzzer: checkbuzzer,\n                    checksms: checksms,  \n                    centros_id: centros_id,\n                    ip_port: ip_port,\n                    notificacion: notificacion\n                });\n\n            }\n        }\n    } else if (variable == 'heading'){\n        if (tipo_alerta == 'Combinada') {\n            var heading_error = 0;\n            var setpoint = parseFloat(alertas[index].heading_inicial);\n            var heading_actual = parseFloat(arr.datos[variable]);\n            heading_error = setpoint - heading_actual;\n\n            if(heading_error <= valor1 || heading_error >= valor4){\n                severidad = 'Rojo';\n            } else {\n                if ((heading_error > valor1 && heading_error <= valor2) || (heading_error >= valor3 && heading_error < valor4)) {\n                    severidad = 'Amarillo';\n                } else {\n                    severidad = 'Verde';\n                }\n            }\n\n            if (severidad != 'Verde' && severidad != '') {\n\n                notificacion = {\n                    centro: centro,\n                    variable: variable_visible,\n                    valor: heading_error,\n                    unidad_medida: simbolo,\n                    fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                    severidad: severidad\n                };\n\n                qry_insert = {\n                    clima_alertas_id: alerta_id,\n                    mongodb_id: String(arr._id),\n                    severidad: severidad,\n                    fecha: arr.fecha,\n                    visto: false,\n                    users_id: null,\n                    respuestas_alertas_id: null,\n                    comentario: ''\n                };\n\n                newMsg.push({\n                    insert_data: qry_insert,\n                    checkemail: checkemail,\n                    checkbuzzer: checkbuzzer,\n                    checksms: checksms,\n                    centros_id: centros_id,\n                    ip_port: ip_port,\n                    notificacion: notificacion\n                });\n\n            }\n        }\n    \n    } else {\n        switch (tipo_alerta) {\n            case 'Simple':\n                if (valor1 > 0) {\n                    //positivo\n                    if (arr.datos[variable] >= valor1) {\n                        severidad = 'Rojo';\n                    } else {\n                        if (arr.datos[variable] >= valor2 && arr.datos[variable] < valor1) {\n                            severidad = 'Amarillo';\n                        } else {\n                            severidad = 'Verde';\n                        }\n                    }\n                } else {\n                    //negativo\n                    if (arr.datos[variable] <= valor1) {\n                        severidad = 'Rojo';\n                    } else {\n                        if (arr.datos[variable] <= valor2 && arr.datos[variable] > valor1) {\n                            severidad = 'Amarillo';\n                        } else {\n                            severidad = 'Verde';\n                        }\n                    }\n                }\n                break;\n            case 'Combinada':\n                if (arr.datos[variable] < valor1 || arr.datos[variable] >= valor4) {\n                    severidad = 'Rojo';\n                } else {\n                    if ((arr.datos[variable] >= valor1 && arr.datos[variable] < valor2) || (arr.datos[variable] > valor3 && arr.datos[variable] < valor4)) {\n                        severidad = 'Amarillo';\n                    } else {\n                        severidad = 'Verde';\n                    }\n                }\n                break;\n        }\n        if (severidad != 'Verde' && severidad != '') {\n            notificacion = {\n                centro: centro,\n                variable: variable_visible,\n                valor: arr.datos[variable],\n                unidad_medida: simbolo,\n                fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                severidad: severidad\n            };\n            qry_insert = {\n                clima_alertas_id: alerta_id,\n                mongodb_id: String(arr._id),\n                severidad: severidad,\n                fecha: arr.fecha,\n                visto: false,\n                users_id: null,\n                respuestas_alertas_id: null,\n                comentario: ''\n            };\n\n            newMsg.push({\n                insert_data: qry_insert,\n                checkemail: checkemail,\n                checkbuzzer: checkbuzzer,\n                checksms: checksms,\n                centros_id: centros_id,\n                ip_port: ip_port,\n                notificacion: notificacion\n            });\n\n\n        }\n    }\n    \n}\n\n\nreturn [newMsg];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "geolib",
                "module": "geolib"
            },
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 930,
        "y": 260,
        "wires": [
            [
                "79255b3b293e077b"
            ]
        ]
    },
    {
        "id": "df5a417c21fe8a3e",
        "type": "mysql",
        "z": "c30905023d6403ac",
        "mydb": "e8b513b0daf9a8a1",
        "name": "",
        "x": 1240,
        "y": 180,
        "wires": [
            [
                "61e5146054a95d7a"
            ]
        ]
    },
    {
        "id": "46323145255a718e",
        "type": "mongodb-objectid",
        "z": "c30905023d6403ac",
        "name": "ObjectId",
        "method": "find",
        "paths": [
            {
                "type": "query",
                "value": "_id"
            }
        ],
        "x": 560,
        "y": 180,
        "wires": [
            [
                "3e77d84b8c4237be"
            ]
        ]
    },
    {
        "id": "3e77d84b8c4237be",
        "type": "mongodb-collection",
        "z": "c30905023d6403ac",
        "name": "find clima",
        "config": "a78027c8bc216efb",
        "collection": "clima",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 720,
        "y": 180,
        "wires": [
            [
                "0a984151f3fad9e4"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "79255b3b293e077b",
        "type": "mongodb-collection",
        "z": "c30905023d6403ac",
        "name": "Insertar",
        "config": "a78027c8bc216efb",
        "collection": "alertas_clima",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "insert_data",
                "type": "msg"
            },
            "options": {
                "value": "option",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1120,
        "y": 260,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "ff59fde96b9bf683",
        "type": "function",
        "z": "8961eccb37d0e87e",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 240,
        "wires": [
            [
                "403fa0d1cf9ee875"
            ]
        ]
    },
    {
        "id": "403fa0d1cf9ee875",
        "type": "switch",
        "z": "8961eccb37d0e87e",
        "name": "filter collection",
        "property": "payload.modulo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "clima",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sensores",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "energia",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad_detalle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "JaulaSmart",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 520,
        "y": 240,
        "wires": [
            [
                "14cddb71f2d33034"
            ],
            [
                "1fefb746baced76c"
            ],
            [
                "95a0f546796b17db"
            ],
            [
                "898ae60c7a12c940"
            ],
            [
                "60e75a99a9de3b7f"
            ],
            []
        ]
    },
    {
        "id": "8a958f6d300aaf15",
        "type": "function",
        "z": "8961eccb37d0e87e",
        "name": "Clima",
        "func": "msg.topic = 'clima';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "395d049d3104bfcf",
        "type": "function",
        "z": "8961eccb37d0e87e",
        "name": "Sensores",
        "func": "msg.topic = 'sensores';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "16a41066df8bedc4",
        "type": "function",
        "z": "8961eccb37d0e87e",
        "name": "Energia",
        "func": "msg.topic = 'energia';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "c1a5cab9de72e623",
        "type": "function",
        "z": "8961eccb37d0e87e",
        "d": true,
        "name": "Pasadores",
        "func": "msg.topic = 'pasadores';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "14cddb71f2d33034",
        "type": "mongodb-collection",
        "z": "8961eccb37d0e87e",
        "name": "Insert-clima",
        "config": "bbda773e6fda6e97",
        "collection": "clima",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 830,
        "y": 100,
        "wires": [
            [
                "8a958f6d300aaf15"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "1fefb746baced76c",
        "type": "mongodb-collection",
        "z": "8961eccb37d0e87e",
        "d": true,
        "name": "Insert-sensores",
        "config": "bbda773e6fda6e97",
        "collection": "sensores",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 840,
        "y": 180,
        "wires": [
            [
                "395d049d3104bfcf"
            ]
        ]
    },
    {
        "id": "95a0f546796b17db",
        "type": "mongodb-collection",
        "z": "8961eccb37d0e87e",
        "d": true,
        "name": "Insert-energia",
        "config": "bbda773e6fda6e97",
        "collection": "energia",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 840,
        "y": 260,
        "wires": [
            [
                "16a41066df8bedc4"
            ]
        ]
    },
    {
        "id": "898ae60c7a12c940",
        "type": "mongodb-collection",
        "z": "8961eccb37d0e87e",
        "d": true,
        "name": "Insert-seguridad",
        "config": "bbda773e6fda6e97",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 840,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "60e75a99a9de3b7f",
        "type": "mongodb-collection",
        "z": "8961eccb37d0e87e",
        "d": true,
        "name": "Insert-seguridad_detalle",
        "config": "bbda773e6fda6e97",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 870,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "9a350b8af2e6a369",
        "type": "switch",
        "z": "f078a67cbe928df7",
        "name": "filter collection",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "clima",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sensores",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "energia",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad_detalle",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 200,
        "y": 280,
        "wires": [
            [
                "c462bdf849fe64b3"
            ],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "c462bdf849fe64b3",
        "type": "function",
        "z": "f078a67cbe928df7",
        "name": "set _id",
        "func": "var id = msg.payload;\nmsg.query = {\n    _id: id\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "mongodb",
                "module": "mongodb"
            }
        ],
        "x": 390,
        "y": 180,
        "wires": [
            [
                "2fe4673c6d3a8898"
            ]
        ]
    },
    {
        "id": "235cdc765c956ca3",
        "type": "function",
        "z": "f078a67cbe928df7",
        "name": "Select alertas",
        "func": "var data = msg.payload[0];\nvar basedatos = 'wisensor_mowi';\nvar codigo_empresa = data.empresa;\nvar codigo_centro = data.codigo_centro;\n\nvar query = \"SELECT  a.id as alerta_id, e.mongodb, e.codigo as codigo_empresa, cc.codigo_interno, a.created_at as fecha,  cc.latitud, cc.longitud, cc.heading_inicial,\" +\n\"sv.nombre_real, a.tipo_alerta, cc.ip_port, a.tipo_dato, a.valor1, a.valor2, a.valor3, a.valor4, a.checkemail, a.checkbuzzer, a.centros_id, sv.nombre_visible, sv.simbolo, c.nombre\" +\n\" FROM clima_alertas AS a\" +\n\" INNER JOIN centros AS c ON a.centros_id = c.id\" +\n\" INNER JOIN empresas AS e ON c.empresas_id = e.id\" +\n\" INNER JOIN sistema_variables AS sv ON a.sistema_variables_id = sv.id\" +\n\" INNER JOIN centros_concesiones AS cc ON a.centros_id = cc.centros_id\" +\n\" WHERE a.activo = 1 \" +\n\" AND c.activo = 1\" +\n\" AND a.activo = 1\" +\n\" AND cc.activo = 1\" +\n\" AND e.mongodb = '\"+basedatos +\"' \"+\n\" AND cc.codigo_interno = '\" + codigo_centro + \"' \" +\n\" AND e.codigo = '\" + codigo_empresa + \"' \" +\n\" AND a.deleted_at IS NULL\" +\n\" AND c.deleted_at IS NULL\"+\n\" AND e.deleted_at IS NULL\";\nmsg.topic = query;\nmsg.data = data;\nreturn msg; \n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 180,
        "wires": [
            [
                "cca12c69b1560e30"
            ]
        ]
    },
    {
        "id": "ffc1ed1216465e52",
        "type": "function",
        "z": "f078a67cbe928df7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 180,
        "wires": [
            [
                "235cdc765c956ca3"
            ]
        ]
    },
    {
        "id": "7095315b33bd3be4",
        "type": "function",
        "z": "f078a67cbe928df7",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 260,
        "wires": [
            [
                "b411cb036ce4b3ac"
            ]
        ]
    },
    {
        "id": "b411cb036ce4b3ac",
        "type": "function",
        "z": "f078a67cbe928df7",
        "name": "loop and search",
        "func": "var newMsg = [];\nvar arr = msg.payload;\nvar alerta = [];\nvar datos = msg.data;\n\nfor (var i = 0; i < arr.length; i++) {\n    alerta.push({\n        alerta_id: arr[i].alerta_id,\n        fecha: new moment(arr[i].fecha).format(\"YYYY-MM-DD\"),\n        mongodb: arr[i].mongodb,\n        codigo_empresa: arr[i].codigo_empresa,\n        codigo_interno: arr[i].codigo_interno,\n        variable: arr[i].nombre_real,\n        tipo_alerta: arr[i].tipo_alerta,\n        tipo_dato: arr[i].tipo_dato,\n        latitud: arr[i].latitud,\n        longitud: arr[i].longitud,\n        heading_inicial: arr[i].heading_inicial,\n        valor1: arr[i].valor1,\n        valor2: arr[i].valor2,\n        valor3: arr[i].valor3,\n        valor4: arr[i].valor4,  \n        checkemail: arr[i].checkemail,  \n        checkbuzzer: arr[i].checkbuzzer, \n        centros_id: arr[i].centros_id,\n        ip_port: arr[i].ip_port,\n        nombre_visible: arr[i].nombre_visible,\n        simbolo: arr[i].simbolo,\n        centro: arr[i].nombre\n    });    \n}\nnewMsg.push({\n    data: datos,\n    alertas: alerta\n});\n\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 680,
        "y": 260,
        "wires": [
            [
                "4a7ebd11408de6d0"
            ]
        ]
    },
    {
        "id": "4a7ebd11408de6d0",
        "type": "function",
        "z": "f078a67cbe928df7",
        "name": "Insertar si no existe",
        "func": "var qry_insert = '';\nvar newMsg = [];\nvar alertas = msg.alertas;\nvar arr = msg.data;\nvar notificacion = [];\n\nfor (let index = 0; index < alertas.length; index++) {\n    var alerta_id = alertas[index].alerta_id;\n    var variable = alertas[index].variable;\n    var variable_visible = alertas[index].nombre_visible;\n    var simbolo = alertas[index].simbolo;\n    var database = alertas[index].mongodb;\n    var tipo_dato = alertas[index].tipo_dato;\n    var valor1 = alertas[index].valor1;\n    var valor2 = alertas[index].valor2;\n    var valor3 = alertas[index].valor3;\n    var valor4 = alertas[index].valor4;\n    var tipo_alerta = alertas[index].tipo_alerta;\n    var ip_port = alertas[index].ip_port;\n    var centro = alertas[index].centro;\n\n    var checkemail = alertas[index].checkemail;\n    var checkbuzzer = alertas[index].checkbuzzer; \n    var centros_id = alertas[index].centros_id; \n    var checksms = 1;\n\n    var latitud = alertas[index].latitud;\n    var longitud = alertas[index].longitud;\n\n    switch (tipo_dato) {\n        case 'Integer':\n            valor1 = parseInt(valor1);\n            valor2 = parseInt(valor2);\n            valor3 = valor3 != null ? parseInt(valor3) : null;\n            valor4 = valor4 != null ? parseInt(valor4) : null;\n            break;\n        case 'Float':\n            valor1 = parseFloat(valor1);\n            valor2 = parseFloat(valor2);\n            valor3 = valor3 != null ? parseFloat(valor3) : null;\n            valor4 = valor4 != null ? parseFloat(valor4) : null;\n            break;\n    }\n\n    var severidad = '';\n    if (variable == 'desviacionGPS') {\n        if (tipo_alerta == 'Simple'){\n            var long = arr.datos[variable].coordinates[0];\n            var latit = arr.datos[variable].coordinates[1];\n            var distancia = geolib.getPreciseDistance(\n                { latitude: latitud, longitude: longitud },\n                { latitude: latit, longitude: long },\n            );\n            if (valor1 > 0) {\n                //positivo\n                if (distancia >= valor1) {\n                    severidad = 'Rojo';\n                } else {\n                    if (distancia >= valor2 && distancia < valor1) {\n                        severidad = 'Amarillo';\n                    } else {\n                        severidad = 'Verde';\n                    }\n                }\n            }\n\n            if (severidad != 'Verde' && severidad != '') {\n                var unid = '';\n                var dist = 0;\n                if(distancia < 1000){\n                    unid = 'm';\n                    dist = distancia;\n                } else {\n                    unid = 'km';\n                    dist = geolib.convertDistance(distancia, 'km');\n                }\n                notificacion = {\n                    centro: centro,\n                    variable: variable_visible,\n                    valor: dist,\n                    unidad_medida: unid,\n                    fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                    severidad: severidad\n                };\n                \n                qry_insert = {\n                    clima_alertas_id: alerta_id,\n                    mongodb_id: String(arr._id),\n                    severidad: severidad,\n                    fecha: arr.fecha,\n                    visto: false,\n                    users_id: null,\n                    respuestas_alertas_id: null,\n                    comentario: ''\n                };\n\n                newMsg.push({\n                    insert_data: qry_insert,\n                    checkemail: checkemail,\n                    checkbuzzer: checkbuzzer,\n                    checksms: checksms,  \n                    centros_id: centros_id,\n                    ip_port: ip_port,\n                    notificacion: notificacion\n                });\n\n            }\n        }\n    } else if (variable == 'heading'){\n        if (tipo_alerta == 'Combinada') {\n            var heading_error = 0;\n            var setpoint = parseFloat(alertas[index].heading_inicial);\n            var heading_actual = parseFloat(arr.datos[variable]);\n            heading_error = setpoint - heading_actual;\n\n            if(heading_error <= valor1 || heading_error >= valor4){\n                severidad = 'Rojo';\n            } else {\n                if ((heading_error > valor1 && heading_error <= valor2) || (heading_error >= valor3 && heading_error < valor4)) {\n                    severidad = 'Amarillo';\n                } else {\n                    severidad = 'Verde';\n                }\n            }\n\n            if (severidad != 'Verde' && severidad != '') {\n\n                notificacion = {\n                    centro: centro,\n                    variable: variable_visible,\n                    valor: heading_error,\n                    unidad_medida: simbolo,\n                    fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                    severidad: severidad\n                };\n\n                qry_insert = {\n                    clima_alertas_id: alerta_id,\n                    mongodb_id: String(arr._id),\n                    severidad: severidad,\n                    fecha: arr.fecha,\n                    visto: false,\n                    users_id: null,\n                    respuestas_alertas_id: null,\n                    comentario: ''\n                };\n\n                newMsg.push({\n                    insert_data: qry_insert,\n                    checkemail: checkemail,\n                    checkbuzzer: checkbuzzer,\n                    checksms: checksms,\n                    centros_id: centros_id,\n                    ip_port: ip_port,\n                    notificacion: notificacion\n                });\n\n            }\n        }\n    \n    } else {\n        switch (tipo_alerta) {\n            case 'Simple':\n                if (valor1 > 0) {\n                    //positivo\n                    if (arr.datos[variable] >= valor1) {\n                        severidad = 'Rojo';\n                    } else {\n                        if (arr.datos[variable] >= valor2 && arr.datos[variable] < valor1) {\n                            severidad = 'Amarillo';\n                        } else {\n                            severidad = 'Verde';\n                        }\n                    }\n                } else {\n                    //negativo\n                    if (arr.datos[variable] <= valor1) {\n                        severidad = 'Rojo';\n                    } else {\n                        if (arr.datos[variable] <= valor2 && arr.datos[variable] > valor1) {\n                            severidad = 'Amarillo';\n                        } else {\n                            severidad = 'Verde';\n                        }\n                    }\n                }\n                break;\n            case 'Combinada':\n                if (arr.datos[variable] < valor1 || arr.datos[variable] >= valor4) {\n                    severidad = 'Rojo';\n                } else {\n                    if ((arr.datos[variable] >= valor1 && arr.datos[variable] < valor2) || (arr.datos[variable] > valor3 && arr.datos[variable] < valor4)) {\n                        severidad = 'Amarillo';\n                    } else {\n                        severidad = 'Verde';\n                    }\n                }\n                break;\n        }\n        if (severidad != 'Verde' && severidad != '') {\n            notificacion = {\n                centro: centro,\n                variable: variable_visible,\n                valor: arr.datos[variable],\n                unidad_medida: simbolo,\n                fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                severidad: severidad\n            };\n            qry_insert = {\n                clima_alertas_id: alerta_id,\n                mongodb_id: String(arr._id),\n                severidad: severidad,\n                fecha: arr.fecha,\n                visto: false,\n                users_id: null,\n                respuestas_alertas_id: null,\n                comentario: ''\n            };\n\n            newMsg.push({\n                insert_data: qry_insert,\n                checkemail: checkemail,\n                checkbuzzer: checkbuzzer,\n                checksms: checksms,\n                centros_id: centros_id,\n                ip_port: ip_port,\n                notificacion: notificacion\n            });\n\n\n        }\n    }\n    \n}\n\n\nreturn [newMsg];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "geolib",
                "module": "geolib"
            },
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 910,
        "y": 260,
        "wires": [
            [
                "6dac212e34757bf6"
            ]
        ]
    },
    {
        "id": "cca12c69b1560e30",
        "type": "mysql",
        "z": "f078a67cbe928df7",
        "mydb": "e8b513b0daf9a8a1",
        "name": "",
        "x": 1220,
        "y": 180,
        "wires": [
            [
                "7095315b33bd3be4"
            ]
        ]
    },
    {
        "id": "2fe4673c6d3a8898",
        "type": "mongodb-objectid",
        "z": "f078a67cbe928df7",
        "name": "ObjectId",
        "method": "find",
        "paths": [
            {
                "type": "query",
                "value": "_id"
            }
        ],
        "x": 540,
        "y": 180,
        "wires": [
            [
                "dc39b2915da37fbe"
            ]
        ]
    },
    {
        "id": "dc39b2915da37fbe",
        "type": "mongodb-collection",
        "z": "f078a67cbe928df7",
        "name": "find clima",
        "config": "5ad0d1c479dfd0a1",
        "collection": "clima",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 700,
        "y": 180,
        "wires": [
            [
                "ffc1ed1216465e52"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "6dac212e34757bf6",
        "type": "mongodb-collection",
        "z": "f078a67cbe928df7",
        "name": "Insertar",
        "config": "5ad0d1c479dfd0a1",
        "collection": "alertas_clima",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "insert_data",
                "type": "msg"
            },
            "options": {
                "value": "option",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1100,
        "y": 260,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "43989a92f1412923",
        "type": "function",
        "z": "deba94ca834b3996",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 260,
        "wires": [
            [
                "39a57807f601bb04"
            ]
        ]
    },
    {
        "id": "39a57807f601bb04",
        "type": "switch",
        "z": "deba94ca834b3996",
        "name": "filter collection",
        "property": "payload.modulo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "clima",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sensores",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "energia",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad_detalle",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 480,
        "y": 260,
        "wires": [
            [
                "dfe17e14d09ef0be"
            ],
            [
                "60def3c4d1aab08e"
            ],
            [
                "14cd547ada0d407d"
            ],
            [
                "a649f1856880b4e3"
            ],
            [
                "545d76f971297c44"
            ]
        ]
    },
    {
        "id": "013ef3552d0c60d4",
        "type": "function",
        "z": "deba94ca834b3996",
        "name": "Clima",
        "func": "msg.topic = 'clima';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "32f8a9183c1e184f",
        "type": "function",
        "z": "deba94ca834b3996",
        "name": "Sensores",
        "func": "msg.topic = 'sensores';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1029,
        "y": 174,
        "wires": [
            []
        ]
    },
    {
        "id": "76e7fc331f33c306",
        "type": "function",
        "z": "deba94ca834b3996",
        "name": "Energia",
        "func": "msg.topic = 'energia';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "dfe17e14d09ef0be",
        "type": "mongodb-collection",
        "z": "deba94ca834b3996",
        "name": "Insert-clima",
        "config": "6d735218d9f8c1cc",
        "collection": "clima",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 790,
        "y": 120,
        "wires": [
            [
                "013ef3552d0c60d4"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "60def3c4d1aab08e",
        "type": "mongodb-collection",
        "z": "deba94ca834b3996",
        "name": "Insert-sensores",
        "config": "6d735218d9f8c1cc",
        "collection": "sensores",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 800,
        "y": 180,
        "wires": [
            [
                "32f8a9183c1e184f"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "14cd547ada0d407d",
        "type": "mongodb-collection",
        "z": "deba94ca834b3996",
        "name": "Insert-energia",
        "config": "6d735218d9f8c1cc",
        "collection": "energia",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 800,
        "y": 240,
        "wires": [
            [
                "76e7fc331f33c306"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "a649f1856880b4e3",
        "type": "mongodb-collection",
        "z": "deba94ca834b3996",
        "d": true,
        "name": "Insert-seguridad",
        "config": "6d735218d9f8c1cc",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 800,
        "y": 300,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "545d76f971297c44",
        "type": "mongodb-collection",
        "z": "deba94ca834b3996",
        "d": true,
        "name": "Insert-seguridad_detalle",
        "config": "6d735218d9f8c1cc",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 830,
        "y": 360,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "29d45c4ba9d70e85",
        "type": "switch",
        "z": "dba1caaf6dda045a",
        "name": "filter collection",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "clima",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sensores",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "energia",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad_detalle",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 200,
        "y": 420,
        "wires": [
            [
                "2c07f77066c8f6bb"
            ],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "2c07f77066c8f6bb",
        "type": "function",
        "z": "dba1caaf6dda045a",
        "name": "set _id",
        "func": "var id = msg.payload;\nmsg.query = {\n    _id: id\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "mongodb",
                "module": "mongodb"
            }
        ],
        "x": 430,
        "y": 100,
        "wires": [
            [
                "44d4b3787dde8cd4"
            ]
        ]
    },
    {
        "id": "54e9f8d2fc6c6e4e",
        "type": "function",
        "z": "dba1caaf6dda045a",
        "name": "Select alertas",
        "func": "var data = msg.payload[0];\nvar basedatos = 'wisensor_gmt';\nvar codigo_empresa = data.empresa;\nvar codigo_centro = data.codigo_centro;\n\nvar query = \"SELECT  a.id as alerta_id, e.mongodb, e.codigo as codigo_empresa, cc.codigo_interno, a.created_at as fecha,  cc.latitud, cc.longitud, cc.heading_inicial,\" +\n\"sv.nombre_real, a.tipo_alerta, cc.ip_port, a.tipo_dato, a.valor1, a.valor2, a.valor3, a.valor4, a.checkemail, a.checkbuzzer, a.centros_id, sv.nombre_visible, sv.simbolo, c.nombre\" +\n\" FROM clima_alertas AS a\" +\n\" INNER JOIN centros AS c ON a.centros_id = c.id\" +\n\" INNER JOIN empresas AS e ON c.empresas_id = e.id\" +\n\" INNER JOIN sistema_variables AS sv ON a.sistema_variables_id = sv.id\" +\n\" INNER JOIN centros_concesiones AS cc ON a.centros_id = cc.centros_id\" +\n\" WHERE a.activo = 1 \" +\n\" AND c.activo = 1\" +\n\" AND a.activo = 1\" +\n\" AND cc.activo = 1\" +\n\" AND e.mongodb = '\"+basedatos +\"' \"+\n\" AND cc.codigo_interno = '\" + codigo_centro + \"' \" +\n\" AND e.codigo = '\" + codigo_empresa + \"' \" +\n\" AND a.deleted_at IS NULL\" +\n\" AND c.deleted_at IS NULL\"+\n\" AND e.deleted_at IS NULL\";\nmsg.topic = query;\nmsg.data = data;\nreturn msg; \n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 100,
        "wires": [
            [
                "305aa89157beabdc"
            ]
        ]
    },
    {
        "id": "317d02e721120555",
        "type": "function",
        "z": "dba1caaf6dda045a",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 100,
        "wires": [
            [
                "54e9f8d2fc6c6e4e"
            ]
        ]
    },
    {
        "id": "152da8881eed9def",
        "type": "function",
        "z": "dba1caaf6dda045a",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 180,
        "wires": [
            [
                "40e85b085f8490ec"
            ]
        ]
    },
    {
        "id": "40e85b085f8490ec",
        "type": "function",
        "z": "dba1caaf6dda045a",
        "name": "loop and search",
        "func": "var newMsg = [];\nvar arr = msg.payload;\nvar alerta = [];\nvar datos = msg.data;\n\nfor (var i = 0; i < arr.length; i++) {\n    alerta.push({\n        alerta_id: arr[i].alerta_id,\n        fecha: new moment(arr[i].fecha).format(\"YYYY-MM-DD\"),\n        mongodb: arr[i].mongodb,\n        codigo_empresa: arr[i].codigo_empresa,\n        codigo_interno: arr[i].codigo_interno,\n        variable: arr[i].nombre_real,\n        tipo_alerta: arr[i].tipo_alerta,\n        tipo_dato: arr[i].tipo_dato,\n        latitud: arr[i].latitud,\n        longitud: arr[i].longitud,\n        heading_inicial: arr[i].heading_inicial,\n        valor1: arr[i].valor1,\n        valor2: arr[i].valor2,\n        valor3: arr[i].valor3,\n        valor4: arr[i].valor4,  \n        checkemail: arr[i].checkemail,  \n        checkbuzzer: arr[i].checkbuzzer, \n        centros_id: arr[i].centros_id,\n        ip_port: arr[i].ip_port,\n        nombre_visible: arr[i].nombre_visible,\n        simbolo: arr[i].simbolo,\n        centro: arr[i].nombre\n    });    \n}\nnewMsg.push({\n    data: datos,\n    alertas: alerta\n});\n\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 720,
        "y": 180,
        "wires": [
            [
                "acde8a020c6e847f"
            ]
        ]
    },
    {
        "id": "acde8a020c6e847f",
        "type": "function",
        "z": "dba1caaf6dda045a",
        "name": "Insertar si no existe",
        "func": "var qry_insert = '';\nvar newMsg = [];\nvar alertas = msg.alertas;\nvar arr = msg.data;\nvar notificacion = [];\n\nfor (let index = 0; index < alertas.length; index++) {\n    var alerta_id = alertas[index].alerta_id;\n    var variable = alertas[index].variable;\n    var variable_visible = alertas[index].nombre_visible;\n    var simbolo = alertas[index].simbolo;\n    var database = alertas[index].mongodb;\n    var tipo_dato = alertas[index].tipo_dato;\n    var valor1 = alertas[index].valor1;\n    var valor2 = alertas[index].valor2;\n    var valor3 = alertas[index].valor3;\n    var valor4 = alertas[index].valor4;\n    var tipo_alerta = alertas[index].tipo_alerta;\n    var ip_port = alertas[index].ip_port;\n    var centro = alertas[index].centro;\n\n    var checkemail = alertas[index].checkemail;\n    var checkbuzzer = alertas[index].checkbuzzer; \n    var centros_id = alertas[index].centros_id; \n    var checksms = 1;\n\n    var latitud = alertas[index].latitud;\n    var longitud = alertas[index].longitud;\n\n    switch (tipo_dato) {\n        case 'Integer':\n            valor1 = parseInt(valor1);\n            valor2 = parseInt(valor2);\n            valor3 = valor3 != null ? parseInt(valor3) : null;\n            valor4 = valor4 != null ? parseInt(valor4) : null;\n            break;\n        case 'Float':\n            valor1 = parseFloat(valor1);\n            valor2 = parseFloat(valor2);\n            valor3 = valor3 != null ? parseFloat(valor3) : null;\n            valor4 = valor4 != null ? parseFloat(valor4) : null;\n            break;\n    }\n\n    var severidad = '';\n    if (variable == 'desviacionGPS') {\n        if (tipo_alerta == 'Simple'){\n            var long = arr.datos[variable].coordinates[0];\n            var latit = arr.datos[variable].coordinates[1];\n            var distancia = geolib.getPreciseDistance(\n                { latitude: latitud, longitude: longitud },\n                { latitude: latit, longitude: long },\n            );\n            if (valor1 > 0) {\n                //positivo\n                if (distancia >= valor1) {\n                    severidad = 'Rojo';\n                } else {\n                    if (distancia >= valor2 && distancia < valor1) {\n                        severidad = 'Amarillo';\n                    } else {\n                        severidad = 'Verde';\n                    }\n                }\n            }\n\n            if (severidad != 'Verde' && severidad != '') {\n                var unid = '';\n                var dist = 0;\n                if(distancia < 1000){\n                    unid = 'm';\n                    dist = distancia;\n                } else {\n                    unid = 'km';\n                    dist = geolib.convertDistance(distancia, 'km');\n                }\n                notificacion = {\n                    centro: centro,\n                    variable: variable_visible,\n                    valor: dist,\n                    unidad_medida: unid,\n                    fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                    severidad: severidad\n                };\n                \n                qry_insert = {\n                    clima_alertas_id: alerta_id,\n                    mongodb_id: String(arr._id),\n                    severidad: severidad,\n                    fecha: arr.fecha,\n                    visto: false,\n                    users_id: null,\n                    respuestas_alertas_id: null,\n                    comentario: ''\n                };\n\n                newMsg.push({\n                    insert_data: qry_insert,\n                    checkemail: checkemail,\n                    checkbuzzer: checkbuzzer,\n                    checksms: checksms,  \n                    centros_id: centros_id,\n                    ip_port: ip_port,\n                    notificacion: notificacion\n                });\n\n            }\n        }\n    } else if (variable == 'heading'){\n        if (tipo_alerta == 'Combinada') {\n            var heading_error = 0;\n            var setpoint = parseFloat(alertas[index].heading_inicial);\n            var heading_actual = parseFloat(arr.datos[variable]);\n            heading_error = setpoint - heading_actual;\n\n            if(heading_error <= valor1 || heading_error >= valor4){\n                severidad = 'Rojo';\n            } else {\n                if ((heading_error > valor1 && heading_error <= valor2) || (heading_error >= valor3 && heading_error < valor4)) {\n                    severidad = 'Amarillo';\n                } else {\n                    severidad = 'Verde';\n                }\n            }\n\n            if (severidad != 'Verde' && severidad != '') {\n\n                notificacion = {\n                    centro: centro,\n                    variable: variable_visible,\n                    valor: heading_error,\n                    unidad_medida: simbolo,\n                    fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                    severidad: severidad\n                };\n\n                qry_insert = {\n                    clima_alertas_id: alerta_id,\n                    mongodb_id: String(arr._id),\n                    severidad: severidad,\n                    fecha: arr.fecha,\n                    visto: false,\n                    users_id: null,\n                    respuestas_alertas_id: null,\n                    comentario: ''\n                };\n\n                newMsg.push({\n                    insert_data: qry_insert,\n                    checkemail: checkemail,\n                    checkbuzzer: checkbuzzer,\n                    checksms: checksms,\n                    centros_id: centros_id,\n                    ip_port: ip_port,\n                    notificacion: notificacion\n                });\n\n            }\n        }\n    \n    } else {\n        switch (tipo_alerta) {\n            case 'Simple':\n                if (valor1 > 0) {\n                    //positivo\n                    if (arr.datos[variable] >= valor1) {\n                        severidad = 'Rojo';\n                    } else {\n                        if (arr.datos[variable] >= valor2 && arr.datos[variable] < valor1) {\n                            severidad = 'Amarillo';\n                        } else {\n                            severidad = 'Verde';\n                        }\n                    }\n                } else {\n                    //negativo\n                    if (arr.datos[variable] <= valor1) {\n                        severidad = 'Rojo';\n                    } else {\n                        if (arr.datos[variable] <= valor2 && arr.datos[variable] > valor1) {\n                            severidad = 'Amarillo';\n                        } else {\n                            severidad = 'Verde';\n                        }\n                    }\n                }\n                break;\n            case 'Combinada':\n                if (arr.datos[variable] < valor1 || arr.datos[variable] >= valor4) {\n                    severidad = 'Rojo';\n                } else {\n                    if ((arr.datos[variable] >= valor1 && arr.datos[variable] < valor2) || (arr.datos[variable] > valor3 && arr.datos[variable] < valor4)) {\n                        severidad = 'Amarillo';\n                    } else {\n                        severidad = 'Verde';\n                    }\n                }\n                break;\n        }\n        if (severidad != 'Verde' && severidad != '') {\n            notificacion = {\n                centro: centro,\n                variable: variable_visible,\n                valor: arr.datos[variable],\n                unidad_medida: simbolo,\n                fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                severidad: severidad\n            };\n            qry_insert = {\n                clima_alertas_id: alerta_id,\n                mongodb_id: String(arr._id),\n                severidad: severidad,\n                fecha: arr.fecha,\n                visto: false,\n                users_id: null,\n                respuestas_alertas_id: null,\n                comentario: ''\n            };\n\n            newMsg.push({\n                insert_data: qry_insert,\n                checkemail: checkemail,\n                checkbuzzer: checkbuzzer,\n                checksms: checksms,\n                centros_id: centros_id,\n                ip_port: ip_port,\n                notificacion: notificacion\n            });\n\n\n        }\n    }\n    \n}\n\n\nreturn [newMsg];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "geolib",
                "module": "geolib"
            },
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 950,
        "y": 180,
        "wires": [
            [
                "ebc8f46712368178"
            ]
        ]
    },
    {
        "id": "305aa89157beabdc",
        "type": "mysql",
        "z": "dba1caaf6dda045a",
        "mydb": "e8b513b0daf9a8a1",
        "name": "",
        "x": 1260,
        "y": 100,
        "wires": [
            [
                "152da8881eed9def"
            ]
        ]
    },
    {
        "id": "44d4b3787dde8cd4",
        "type": "mongodb-objectid",
        "z": "dba1caaf6dda045a",
        "name": "ObjectId",
        "method": "find",
        "paths": [
            {
                "type": "query",
                "value": "_id"
            }
        ],
        "x": 580,
        "y": 100,
        "wires": [
            [
                "5805ca915769846a"
            ]
        ]
    },
    {
        "id": "5805ca915769846a",
        "type": "mongodb-collection",
        "z": "dba1caaf6dda045a",
        "name": "find clima",
        "config": "aea86e27262eaf28",
        "collection": "clima",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 740,
        "y": 100,
        "wires": [
            [
                "317d02e721120555"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "ebc8f46712368178",
        "type": "mongodb-collection",
        "z": "dba1caaf6dda045a",
        "name": "Insertar",
        "config": "aea86e27262eaf28",
        "collection": "alertas_clima",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "insert_data",
                "type": "msg"
            },
            "options": {
                "value": "option",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1140,
        "y": 180,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "ab372a79b385ad04",
        "type": "switch",
        "z": "a68f9a56f13d9015",
        "name": "existe alerta",
        "property": "insert_data",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 270,
        "y": 220,
        "wires": [
            [
                "f19d5b04c473f7c5",
                "8aadab06de0cdcc7",
                "fd356daad0d3a211"
            ]
        ]
    },
    {
        "id": "f19d5b04c473f7c5",
        "type": "switch",
        "z": "a68f9a56f13d9015",
        "name": "Check email",
        "property": "checkemail",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 160,
        "wires": [
            [
                "3d2e89e681781547"
            ]
        ]
    },
    {
        "id": "8aadab06de0cdcc7",
        "type": "switch",
        "z": "a68f9a56f13d9015",
        "name": "Check buzzer",
        "property": "checkbuzzer",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 480,
        "y": 220,
        "wires": [
            [
                "6bdc92ecd1033d28"
            ]
        ]
    },
    {
        "id": "fd356daad0d3a211",
        "type": "switch",
        "z": "a68f9a56f13d9015",
        "name": "Check sms",
        "property": "checksms",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 300,
        "wires": [
            [
                "587d88a105159738"
            ]
        ]
    },
    {
        "id": "3d2e89e681781547",
        "type": "function",
        "z": "a68f9a56f13d9015",
        "name": "msg",
        "func": "msg.payload = 'Notificacion email activo para variable:';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "6bdc92ecd1033d28",
        "type": "function",
        "z": "a68f9a56f13d9015",
        "name": "msg",
        "func": "msg.payload = 'Notificacion buzzer activo para variable:';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "587d88a105159738",
        "type": "function",
        "z": "a68f9a56f13d9015",
        "name": "msg",
        "func": "msg.payload = 'Notificacion sms activo para variable:';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "a0bae8326f139154",
        "type": "switch",
        "z": "d4ab397b32bf790c",
        "name": "filter collection",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "clima",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sensores",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "energia",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad_detalle",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 180,
        "y": 200,
        "wires": [
            [
                "6e42820f3b0240be"
            ],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "6e42820f3b0240be",
        "type": "function",
        "z": "d4ab397b32bf790c",
        "name": "set _id",
        "func": "var id = msg.payload;\nmsg.query = {\n    _id: id\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "mongodb",
                "module": "mongodb"
            }
        ],
        "x": 370,
        "y": 100,
        "wires": [
            [
                "4f3cf89afd5c4b74"
            ]
        ]
    },
    {
        "id": "c457509c7d463d8d",
        "type": "function",
        "z": "d4ab397b32bf790c",
        "name": "Select alertas",
        "func": "var data = msg.payload[0];\nvar basedatos = 'wisensor_test';\nvar codigo_empresa = data.empresa;\nvar codigo_centro = data.codigo_centro;\n\nvar query = \"SELECT  a.id as alerta_id, e.mongodb, e.codigo as codigo_empresa, cc.codigo_interno, a.created_at as fecha,  cc.latitud, cc.longitud, cc.heading_inicial,\" +\n\"sv.nombre_real, a.tipo_alerta, cc.ip_port, a.tipo_dato, a.valor1, a.valor2, a.valor3, a.valor4, a.checkemail, a.checkbuzzer, a.centros_id, sv.nombre_visible, sv.simbolo, c.nombre\" +\n\" FROM clima_alertas AS a\" +\n\" INNER JOIN centros AS c ON a.centros_id = c.id\" +\n\" INNER JOIN empresas AS e ON c.empresas_id = e.id\" +\n\" INNER JOIN sistema_variables AS sv ON a.sistema_variables_id = sv.id\" +\n\" INNER JOIN centros_concesiones AS cc ON a.centros_id = cc.centros_id\" +\n\" WHERE a.activo = 1 \" +\n\" AND c.activo = 1\" +\n\" AND a.activo = 1\" +\n\" AND cc.activo = 1\" +\n\" AND e.mongodb = '\"+basedatos +\"' \"+\n\" AND cc.codigo_interno = '\" + codigo_centro + \"' \" +\n\" AND e.codigo = '\" + codigo_empresa + \"' \" +\n\" AND a.deleted_at IS NULL\" +\n\" AND c.deleted_at IS NULL\"+\n\" AND e.deleted_at IS NULL\";\nmsg.topic = query;\nmsg.data = data;\nreturn msg; \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 100,
        "wires": [
            [
                "3e61343c8260644f"
            ]
        ]
    },
    {
        "id": "9f18940cc07dae2c",
        "type": "function",
        "z": "d4ab397b32bf790c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 100,
        "wires": [
            [
                "c457509c7d463d8d"
            ]
        ]
    },
    {
        "id": "730ee83c2f78374a",
        "type": "function",
        "z": "d4ab397b32bf790c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 180,
        "wires": [
            [
                "fd4b1977043316c7"
            ]
        ]
    },
    {
        "id": "fd4b1977043316c7",
        "type": "function",
        "z": "d4ab397b32bf790c",
        "name": "loop and search",
        "func": "var newMsg = [];\nvar arr = msg.payload;\nvar alerta = [];\nvar datos = msg.data;\n\nfor (var i = 0; i < arr.length; i++) {\n    alerta.push({\n        alerta_id: arr[i].alerta_id,\n        fecha: new moment(arr[i].fecha).format(\"YYYY-MM-DD\"),\n        mongodb: arr[i].mongodb,\n        codigo_empresa: arr[i].codigo_empresa,\n        codigo_interno: arr[i].codigo_interno,\n        variable: arr[i].nombre_real,\n        tipo_alerta: arr[i].tipo_alerta,\n        tipo_dato: arr[i].tipo_dato,\n        latitud: arr[i].latitud,\n        longitud: arr[i].longitud,\n        heading_inicial: arr[i].heading_inicial,\n        valor1: arr[i].valor1,\n        valor2: arr[i].valor2,\n        valor3: arr[i].valor3,\n        valor4: arr[i].valor4,  \n        checkemail: arr[i].checkemail,  \n        checkbuzzer: arr[i].checkbuzzer, \n        centros_id: arr[i].centros_id,\n        ip_port: arr[i].ip_port,\n        nombre_visible: arr[i].nombre_visible,\n        simbolo: arr[i].simbolo,\n        centro: arr[i].nombre\n    });    \n}\nnewMsg.push({\n    data: datos,\n    alertas: alerta\n});\n\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 660,
        "y": 180,
        "wires": [
            [
                "d721d5d3783a8a1c"
            ]
        ]
    },
    {
        "id": "d721d5d3783a8a1c",
        "type": "function",
        "z": "d4ab397b32bf790c",
        "name": "Insertar si no existe",
        "func": "var qry_insert = '';\nvar newMsg = [];\nvar alertas = msg.alertas;\nvar arr = msg.data;\nvar notificacion = [];\n\nfor (let index = 0; index < alertas.length; index++) {\n    var alerta_id = alertas[index].alerta_id;\n    var variable = alertas[index].variable;\n    var variable_visible = alertas[index].nombre_visible;\n    var simbolo = alertas[index].simbolo;\n    var database = alertas[index].mongodb;\n    var tipo_dato = alertas[index].tipo_dato;\n    var valor1 = alertas[index].valor1;\n    var valor2 = alertas[index].valor2;\n    var valor3 = alertas[index].valor3;\n    var valor4 = alertas[index].valor4;\n    var tipo_alerta = alertas[index].tipo_alerta;\n    var ip_port = alertas[index].ip_port;\n    var centro = alertas[index].centro;\n\n    var checkemail = alertas[index].checkemail;\n    var checkbuzzer = alertas[index].checkbuzzer; \n    var centros_id = alertas[index].centros_id; \n    var checksms = 1;\n\n    var latitud = alertas[index].latitud;\n    var longitud = alertas[index].longitud;\n\n    switch (tipo_dato) {\n        case 'Integer':\n            valor1 = parseInt(valor1);\n            valor2 = parseInt(valor2);\n            valor3 = valor3 != null ? parseInt(valor3) : null;\n            valor4 = valor4 != null ? parseInt(valor4) : null;\n            break;\n        case 'Float':\n            valor1 = parseFloat(valor1);\n            valor2 = parseFloat(valor2);\n            valor3 = valor3 != null ? parseFloat(valor3) : null;\n            valor4 = valor4 != null ? parseFloat(valor4) : null;\n            break;\n    }\n\n    var severidad = '';\n    if (variable == 'desviacionGPS') {\n        if (tipo_alerta == 'Simple'){\n            var long = arr.datos[variable].coordinates[0];\n            var latit = arr.datos[variable].coordinates[1];\n            var distancia = geolib.getPreciseDistance(\n                { latitude: latitud, longitude: longitud },\n                { latitude: latit, longitude: long },\n            );\n            if (valor1 > 0) {\n                //positivo\n                if (distancia >= valor1) {\n                    severidad = 'Rojo';\n                } else {\n                    if (distancia >= valor2 && distancia < valor1) {\n                        severidad = 'Amarillo';\n                    } else {\n                        severidad = 'Verde';\n                    }\n                }\n            }\n\n            if (severidad != 'Verde' && severidad != '') {\n                var unid = '';\n                var dist = 0;\n                if(distancia < 1000){\n                    unid = 'm';\n                    dist = distancia;\n                } else {\n                    unid = 'km';\n                    dist = geolib.convertDistance(distancia, 'km');\n                }\n                notificacion = {\n                    centro: centro,\n                    variable: variable_visible,\n                    valor: dist,\n                    unidad_medida: unid,\n                    fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                    severidad: severidad\n                };\n                \n                qry_insert = {\n                    clima_alertas_id: alerta_id,\n                    mongodb_id: String(arr._id),\n                    severidad: severidad,\n                    fecha: arr.fecha,\n                    visto: false,\n                    users_id: null,\n                    respuestas_alertas_id: null,\n                    comentario: ''\n                };\n\n                newMsg.push({\n                    insert_data: qry_insert,\n                    checkemail: checkemail,\n                    checkbuzzer: checkbuzzer,\n                    checksms: checksms,  \n                    centros_id: centros_id,\n                    ip_port: ip_port,\n                    notificacion: notificacion\n                });\n\n            }\n        }\n    } else if (variable == 'heading'){\n        if (tipo_alerta == 'Combinada') {\n            var heading_error = 0;\n            var setpoint = parseFloat(alertas[index].heading_inicial);\n            var heading_actual = parseFloat(arr.datos[variable]);\n            heading_error = setpoint - heading_actual;\n\n            if(heading_error <= valor1 || heading_error >= valor4){\n                severidad = 'Rojo';\n            } else {\n                if ((heading_error > valor1 && heading_error <= valor2) || (heading_error >= valor3 && heading_error < valor4)) {\n                    severidad = 'Amarillo';\n                } else {\n                    severidad = 'Verde';\n                }\n            }\n\n            if (severidad != 'Verde' && severidad != '') {\n\n                notificacion = {\n                    centro: centro,\n                    variable: variable_visible,\n                    valor: heading_error,\n                    unidad_medida: simbolo,\n                    fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                    severidad: severidad\n                };\n\n                qry_insert = {\n                    clima_alertas_id: alerta_id,\n                    mongodb_id: String(arr._id),\n                    severidad: severidad,\n                    fecha: arr.fecha,\n                    visto: false,\n                    users_id: null,\n                    respuestas_alertas_id: null,\n                    comentario: ''\n                };\n\n                newMsg.push({\n                    insert_data: qry_insert,\n                    checkemail: checkemail,\n                    checkbuzzer: checkbuzzer,\n                    checksms: checksms,\n                    centros_id: centros_id,\n                    ip_port: ip_port,\n                    notificacion: notificacion\n                });\n\n            }\n        }\n    \n    } else {\n        switch (tipo_alerta) {\n            case 'Simple':\n                if (valor1 > 0) {\n                    //positivo\n                    if (arr.datos[variable] >= valor1) {\n                        severidad = 'Rojo';\n                    } else {\n                        if (arr.datos[variable] >= valor2 && arr.datos[variable] < valor1) {\n                            severidad = 'Amarillo';\n                        } else {\n                            severidad = 'Verde';\n                        }\n                    }\n                } else {\n                    //negativo\n                    if (arr.datos[variable] <= valor1) {\n                        severidad = 'Rojo';\n                    } else {\n                        if (arr.datos[variable] <= valor2 && arr.datos[variable] > valor1) {\n                            severidad = 'Amarillo';\n                        } else {\n                            severidad = 'Verde';\n                        }\n                    }\n                }\n                break;\n            case 'Combinada':\n                if (arr.datos[variable] < valor1 || arr.datos[variable] >= valor4) {\n                    severidad = 'Rojo';\n                } else {\n                    if ((arr.datos[variable] >= valor1 && arr.datos[variable] < valor2) || (arr.datos[variable] > valor3 && arr.datos[variable] < valor4)) {\n                        severidad = 'Amarillo';\n                    } else {\n                        severidad = 'Verde';\n                    }\n                }\n                break;\n        }\n        if (severidad != 'Verde' && severidad != '') {\n            notificacion = {\n                centro: centro,\n                variable: variable_visible,\n                valor: arr.datos[variable],\n                unidad_medida: simbolo,\n                fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                severidad: severidad\n            };\n            qry_insert = {\n                clima_alertas_id: alerta_id,\n                mongodb_id: String(arr._id),\n                severidad: severidad,\n                fecha: arr.fecha,\n                visto: false,\n                users_id: null,\n                respuestas_alertas_id: null,\n                comentario: ''\n            };\n\n            newMsg.push({\n                insert_data: qry_insert,\n                checkemail: checkemail,\n                checkbuzzer: checkbuzzer,\n                checksms: checksms,\n                centros_id: centros_id,\n                ip_port: ip_port,\n                notificacion: notificacion\n            });\n\n\n        }\n    }\n    \n}\n\n\nreturn [newMsg];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "geolib",
                "module": "geolib"
            },
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 890,
        "y": 180,
        "wires": [
            [
                "8e5d552fd08a924e"
            ]
        ]
    },
    {
        "id": "3e61343c8260644f",
        "type": "mysql",
        "z": "d4ab397b32bf790c",
        "mydb": "e8b513b0daf9a8a1",
        "name": "",
        "x": 1200,
        "y": 100,
        "wires": [
            [
                "730ee83c2f78374a"
            ]
        ]
    },
    {
        "id": "4f3cf89afd5c4b74",
        "type": "mongodb-objectid",
        "z": "d4ab397b32bf790c",
        "name": "ObjectId",
        "method": "find",
        "paths": [
            {
                "type": "query",
                "value": "_id"
            }
        ],
        "x": 520,
        "y": 100,
        "wires": [
            [
                "ff1e3bbf1201e771"
            ]
        ]
    },
    {
        "id": "ff1e3bbf1201e771",
        "type": "mongodb-collection",
        "z": "d4ab397b32bf790c",
        "name": "find clima",
        "config": "babdb35fd23914fd",
        "collection": "clima",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 680,
        "y": 100,
        "wires": [
            [
                "9f18940cc07dae2c"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "8e5d552fd08a924e",
        "type": "mongodb-collection",
        "z": "d4ab397b32bf790c",
        "name": "Insertar",
        "config": "babdb35fd23914fd",
        "collection": "clima_alertas",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "insert_data",
                "type": "msg"
            },
            "options": {
                "value": "option",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1080,
        "y": 180,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "605d50aa9ff2af2e",
        "type": "function",
        "z": "6ba6005971c4fd53",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 280,
        "wires": [
            [
                "1e431cd29c784045"
            ]
        ]
    },
    {
        "id": "1e431cd29c784045",
        "type": "switch",
        "z": "6ba6005971c4fd53",
        "name": "filter collection",
        "property": "payload.modulo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "clima",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sensores",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "energia",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad_detalle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "trencito",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 480,
        "y": 280,
        "wires": [
            [
                "54764abd67388c95"
            ],
            [
                "2b43216e6b8c5e24"
            ],
            [
                "314fbe008ce403e5"
            ],
            [
                "3796d08a852c78a8"
            ],
            [
                "14a06565213197d2"
            ],
            [
                "b2458582780952a7"
            ]
        ]
    },
    {
        "id": "3de2fdd2c347a44c",
        "type": "function",
        "z": "6ba6005971c4fd53",
        "name": "Clima",
        "func": "msg.topic = 'clima';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "76588ed854556a84",
        "type": "function",
        "z": "6ba6005971c4fd53",
        "name": "Sensores",
        "func": "msg.topic = 'sensores';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "25c3cf14b212df47",
        "type": "function",
        "z": "6ba6005971c4fd53",
        "name": "Energia",
        "func": "msg.topic = 'energia';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "54764abd67388c95",
        "type": "mongodb-collection",
        "z": "6ba6005971c4fd53",
        "name": "Insert-clima",
        "config": "babdb35fd23914fd",
        "collection": "clima",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 770,
        "y": 140,
        "wires": [
            [
                "3de2fdd2c347a44c"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "2b43216e6b8c5e24",
        "type": "mongodb-collection",
        "z": "6ba6005971c4fd53",
        "d": true,
        "name": "Insert-sensores",
        "config": "babdb35fd23914fd",
        "collection": "sensores",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 780,
        "y": 200,
        "wires": [
            [
                "76588ed854556a84"
            ]
        ]
    },
    {
        "id": "314fbe008ce403e5",
        "type": "mongodb-collection",
        "z": "6ba6005971c4fd53",
        "d": true,
        "name": "Insert-energia",
        "config": "babdb35fd23914fd",
        "collection": "energia",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 780,
        "y": 260,
        "wires": [
            [
                "25c3cf14b212df47"
            ]
        ]
    },
    {
        "id": "3796d08a852c78a8",
        "type": "mongodb-collection",
        "z": "6ba6005971c4fd53",
        "d": true,
        "name": "Insert-seguridad",
        "config": "babdb35fd23914fd",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 780,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "14a06565213197d2",
        "type": "mongodb-collection",
        "z": "6ba6005971c4fd53",
        "d": true,
        "name": "Insert-seguridad_detalle",
        "config": "babdb35fd23914fd",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 810,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "b2458582780952a7",
        "type": "mongodb-collection",
        "z": "6ba6005971c4fd53",
        "name": "Insert-tren",
        "config": "babdb35fd23914fd",
        "collection": "trencito",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 790,
        "y": 580,
        "wires": [
            [
                "e9339d981059a085"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "e9339d981059a085",
        "type": "function",
        "z": "6ba6005971c4fd53",
        "name": "Trencito",
        "func": "msg.topic = 'trencito';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "7cce94cb084ad42d",
        "type": "function",
        "z": "b8a2caa810fe59fd",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 240,
        "wires": [
            [
                "ef1c2545d8b0113c"
            ]
        ]
    },
    {
        "id": "ef1c2545d8b0113c",
        "type": "switch",
        "z": "b8a2caa810fe59fd",
        "name": "filter collection",
        "property": "payload.modulo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "clima",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sensores",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "energia",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad_detalle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "JaulaSmart",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 440,
        "y": 240,
        "wires": [
            [
                "a797c004c918cf36"
            ],
            [
                "17071f19a94993ce"
            ],
            [
                "b3b963618474260d"
            ],
            [
                "ae58e43a64a20615"
            ],
            [
                "076ff5eaefb72ebe"
            ],
            [
                "4627af505363f0df"
            ]
        ]
    },
    {
        "id": "977c9bd2612d61cc",
        "type": "function",
        "z": "b8a2caa810fe59fd",
        "name": "Clima",
        "func": "msg.topic = 'clima';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "eec10100e5aa01c6",
        "type": "function",
        "z": "b8a2caa810fe59fd",
        "name": "Sensores",
        "func": "msg.topic = 'sensores';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 989,
        "y": 154,
        "wires": [
            []
        ]
    },
    {
        "id": "b831d562b4228bbb",
        "type": "function",
        "z": "b8a2caa810fe59fd",
        "name": "Energia",
        "func": "msg.topic = 'energia';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "de61d5747d3099e4",
        "type": "function",
        "z": "b8a2caa810fe59fd",
        "name": "Pasadores",
        "func": "msg.topic = 'pasadores';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "a797c004c918cf36",
        "type": "mongodb-collection",
        "z": "b8a2caa810fe59fd",
        "name": "Insert-clima",
        "config": "aea86e27262eaf28",
        "collection": "clima",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 750,
        "y": 80,
        "wires": [
            [
                "977c9bd2612d61cc"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "17071f19a94993ce",
        "type": "mongodb-collection",
        "z": "b8a2caa810fe59fd",
        "name": "Insert-sensores",
        "config": "aea86e27262eaf28",
        "collection": "sensores-iot",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 760,
        "y": 140,
        "wires": [
            [
                "eec10100e5aa01c6"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "b3b963618474260d",
        "type": "mongodb-collection",
        "z": "b8a2caa810fe59fd",
        "name": "Insert-energia",
        "config": "aea86e27262eaf28",
        "collection": "energia",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 760,
        "y": 220,
        "wires": [
            [
                "b831d562b4228bbb"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "ae58e43a64a20615",
        "type": "mongodb-collection",
        "z": "b8a2caa810fe59fd",
        "d": true,
        "name": "Insert-seguridad",
        "config": "aea86e27262eaf28",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 760,
        "y": 280,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "076ff5eaefb72ebe",
        "type": "mongodb-collection",
        "z": "b8a2caa810fe59fd",
        "d": true,
        "name": "Insert-seguridad_detalle",
        "config": "aea86e27262eaf28",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 770,
        "y": 340,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "4627af505363f0df",
        "type": "mongodb-collection",
        "z": "b8a2caa810fe59fd",
        "name": "Insert-pasadores",
        "config": "aea86e27262eaf28",
        "collection": "pasadores",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 770,
        "y": 420,
        "wires": [
            [
                "de61d5747d3099e4"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "13e102d42bcee8f0",
        "type": "function",
        "z": "b8a2caa810fe59fd",
        "d": true,
        "name": "function 1",
        "func": "var connectionDetails = {\n    \"wisensor_gmt\": {\n        \"url\": \"mongodb://localhost:27017/wisensor_gmt\",\n        \"collection\": \"clima\"\n    },\n    \"wisensor_ast\": {\n        \"url\": \"mongodb://localhost:27017/wisensor_ast\",\n        \"collection\": \"clima\"\n    },\n    // ... otras conexiones\n};\n\nvar connectionName = msg.connectionName; // Nombre de la conexión proporcionado como mensaje\n\nif (connectionDetails.hasOwnProperty(connectionName)) {\n    // Configuración de conexión válida\n    var config = connectionDetails[connectionName];\n    node.context().flow.set('mongodb_config', config);\n    return msg;\n} else {\n    // Manejar caso de conexión no válida\n    node.error(\"Conexión no válida: \" + connectionName);\n    return null;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 500,
        "wires": [
            [
                "0c4aabecbd02253c"
            ]
        ]
    },
    {
        "id": "0c4aabecbd02253c",
        "type": "debug",
        "z": "b8a2caa810fe59fd",
        "d": true,
        "name": "debug 235",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 500,
        "wires": []
    },
    {
        "id": "385724e70eb586c2",
        "type": "switch",
        "z": "887ae0d1a8656db5",
        "name": "filter collection",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "clima",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sensores",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "energia",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad_detalle",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 220,
        "y": 280,
        "wires": [
            [
                "8c643c4b7e4ba429"
            ],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "8c643c4b7e4ba429",
        "type": "function",
        "z": "887ae0d1a8656db5",
        "name": "set _id",
        "func": "var id = msg.payload;\nmsg.query = {\n    _id: id\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "mongodb",
                "module": "mongodb"
            }
        ],
        "x": 410,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "c7d28e6540e80451",
        "type": "function",
        "z": "887ae0d1a8656db5",
        "name": "Select alertas",
        "func": "var data = msg.payload[0];\nvar basedatos = 'wisensor_aquachile';\nvar codigo_empresa = data.empresa;\nvar codigo_centro = data.codigo_centro;\n\nvar query = \"SELECT  a.id as alerta_id, e.mongodb, e.codigo as codigo_empresa, cc.codigo_interno, a.created_at as fecha,  cc.latitud, cc.longitud, cc.heading_inicial,\" +\n\"sv.nombre_real, a.tipo_alerta, cc.ip_port, a.tipo_dato, a.valor1, a.valor2, a.valor3, a.valor4, a.checkemail, a.checkbuzzer, a.centros_id, sv.nombre_visible, sv.simbolo, c.nombre\" +\n\" FROM clima_alertas AS a\" +\n\" INNER JOIN centros AS c ON a.centros_id = c.id\" +\n\" INNER JOIN empresas AS e ON c.empresas_id = e.id\" +\n\" INNER JOIN sistema_variables AS sv ON a.sistema_variables_id = sv.id\" +\n\" INNER JOIN centros_concesiones AS cc ON a.centros_id = cc.centros_id\" +\n\" WHERE a.activo = 1 \" +\n\" AND c.activo = 1\" +\n\" AND a.activo = 1\" +\n\" AND cc.activo = 1\" +\n\" AND e.mongodb = '\"+basedatos +\"' \"+\n\" AND cc.codigo_interno = '\" + codigo_centro + \"' \" +\n\" AND e.codigo = '\" + codigo_empresa + \"' \" +\n\" AND a.deleted_at IS NULL\" +\n\" AND c.deleted_at IS NULL\"+\n\" AND e.deleted_at IS NULL\";\nmsg.topic = query;\nmsg.data = data;\nreturn msg; \n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 180,
        "wires": [
            [
                "6e4e825a11be2a10"
            ]
        ]
    },
    {
        "id": "ab63723a20b66d80",
        "type": "function",
        "z": "887ae0d1a8656db5",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 180,
        "wires": [
            [
                "c7d28e6540e80451"
            ]
        ]
    },
    {
        "id": "4f1e852cdaf8e346",
        "type": "function",
        "z": "887ae0d1a8656db5",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 260,
        "wires": [
            [
                "e41991349a8aa86b"
            ]
        ]
    },
    {
        "id": "e41991349a8aa86b",
        "type": "function",
        "z": "887ae0d1a8656db5",
        "name": "loop and search",
        "func": "var newMsg = [];\nvar arr = msg.payload;\nvar alerta = [];\nvar datos = msg.data;\n\nfor (var i = 0; i < arr.length; i++) {\n    alerta.push({\n        alerta_id: arr[i].alerta_id,\n        fecha: new moment(arr[i].fecha).format(\"YYYY-MM-DD\"),\n        mongodb: arr[i].mongodb,\n        codigo_empresa: arr[i].codigo_empresa,\n        codigo_interno: arr[i].codigo_interno,\n        variable: arr[i].nombre_real,\n        tipo_alerta: arr[i].tipo_alerta,\n        tipo_dato: arr[i].tipo_dato,\n        latitud: arr[i].latitud,\n        longitud: arr[i].longitud,\n        heading_inicial: arr[i].heading_inicial,\n        valor1: arr[i].valor1,\n        valor2: arr[i].valor2,\n        valor3: arr[i].valor3,\n        valor4: arr[i].valor4,  \n        checkemail: arr[i].checkemail,  \n        checkbuzzer: arr[i].checkbuzzer, \n        centros_id: arr[i].centros_id,\n        ip_port: arr[i].ip_port,\n        nombre_visible: arr[i].nombre_visible,\n        simbolo: arr[i].simbolo,\n        centro: arr[i].nombre\n    });    \n}\nnewMsg.push({\n    data: datos,\n    alertas: alerta\n});\n\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 700,
        "y": 260,
        "wires": [
            [
                "ed1e9953773c12f0"
            ]
        ]
    },
    {
        "id": "ed1e9953773c12f0",
        "type": "function",
        "z": "887ae0d1a8656db5",
        "name": "Insertar si no existe",
        "func": "var qry_insert = '';\nvar newMsg = [];\nvar alertas = msg.alertas;\nvar arr = msg.data;\nvar notificacion = [];\n\nfor (let index = 0; index < alertas.length; index++) {\n    var alerta_id = alertas[index].alerta_id;\n    var variable = alertas[index].variable;\n    var variable_visible = alertas[index].nombre_visible;\n    var simbolo = alertas[index].simbolo;\n    var database = alertas[index].mongodb;\n    var tipo_dato = alertas[index].tipo_dato;\n    var valor1 = alertas[index].valor1;\n    var valor2 = alertas[index].valor2;\n    var valor3 = alertas[index].valor3;\n    var valor4 = alertas[index].valor4;\n    var tipo_alerta = alertas[index].tipo_alerta;\n    var ip_port = alertas[index].ip_port;\n    var centro = alertas[index].centro;\n\n    var checkemail = alertas[index].checkemail;\n    var checkbuzzer = alertas[index].checkbuzzer; \n    var centros_id = alertas[index].centros_id; \n    var checksms = 1;\n\n    var latitud = alertas[index].latitud;\n    var longitud = alertas[index].longitud;\n\n    switch (tipo_dato) {\n        case 'Integer':\n            valor1 = parseInt(valor1);\n            valor2 = parseInt(valor2);\n            valor3 = valor3 != null ? parseInt(valor3) : null;\n            valor4 = valor4 != null ? parseInt(valor4) : null;\n            break;\n        case 'Float':\n            valor1 = parseFloat(valor1);\n            valor2 = parseFloat(valor2);\n            valor3 = valor3 != null ? parseFloat(valor3) : null;\n            valor4 = valor4 != null ? parseFloat(valor4) : null;\n            break;\n    }\n\n    var severidad = '';\n    if (variable == 'desviacionGPS') {\n        if (tipo_alerta == 'Simple'){\n            var long = arr.datos[variable].coordinates[0];\n            var latit = arr.datos[variable].coordinates[1];\n            var distancia = geolib.getPreciseDistance(\n                { latitude: latitud, longitude: longitud },\n                { latitude: latit, longitude: long },\n            );\n            if (valor1 > 0) {\n                //positivo\n                if (distancia >= valor1) {\n                    severidad = 'Rojo';\n                } else {\n                    if (distancia >= valor2 && distancia < valor1) {\n                        severidad = 'Amarillo';\n                    } else {\n                        severidad = 'Verde';\n                    }\n                }\n            }\n\n            if (severidad != 'Verde' && severidad != '') {\n                var unid = '';\n                var dist = 0;\n                if(distancia < 1000){\n                    unid = 'm';\n                    dist = distancia;\n                } else {\n                    unid = 'km';\n                    dist = geolib.convertDistance(distancia, 'km');\n                }\n                notificacion = {\n                    centro: centro,\n                    variable: variable_visible,\n                    valor: dist,\n                    unidad_medida: unid,\n                    fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                    severidad: severidad\n                };\n                \n                qry_insert = {\n                    clima_alertas_id: alerta_id,\n                    mongodb_id: String(arr._id),\n                    severidad: severidad,\n                    fecha: arr.fecha,\n                    visto: false,\n                    users_id: null,\n                    respuestas_alertas_id: null,\n                    comentario: ''\n                };\n\n                newMsg.push({\n                    insert_data: qry_insert,\n                    checkemail: checkemail,\n                    checkbuzzer: checkbuzzer,\n                    checksms: checksms,  \n                    centros_id: centros_id,\n                    ip_port: ip_port,\n                    notificacion: notificacion\n                });\n\n            }\n        }\n    } else if (variable == 'heading'){\n        if (tipo_alerta == 'Combinada') {\n            var heading_error = 0;\n            var setpoint = parseFloat(alertas[index].heading_inicial);\n            var heading_actual = parseFloat(arr.datos[variable]);\n            heading_error = setpoint - heading_actual;\n\n            if(heading_error <= valor1 || heading_error >= valor4){\n                severidad = 'Rojo';\n            } else {\n                if ((heading_error > valor1 && heading_error <= valor2) || (heading_error >= valor3 && heading_error < valor4)) {\n                    severidad = 'Amarillo';\n                } else {\n                    severidad = 'Verde';\n                }\n            }\n\n            if (severidad != 'Verde' && severidad != '') {\n\n                notificacion = {\n                    centro: centro,\n                    variable: variable_visible,\n                    valor: heading_error,\n                    unidad_medida: simbolo,\n                    fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                    severidad: severidad\n                };\n\n                qry_insert = {\n                    clima_alertas_id: alerta_id,\n                    mongodb_id: String(arr._id),\n                    severidad: severidad,\n                    fecha: arr.fecha,\n                    visto: false,\n                    users_id: null,\n                    respuestas_alertas_id: null,\n                    comentario: ''\n                };\n\n                newMsg.push({\n                    insert_data: qry_insert,\n                    checkemail: checkemail,\n                    checkbuzzer: checkbuzzer,\n                    checksms: checksms,\n                    centros_id: centros_id,\n                    ip_port: ip_port,\n                    notificacion: notificacion\n                });\n\n            }\n        }\n    \n    } else {\n        switch (tipo_alerta) {\n            case 'Simple':\n                if (valor1 > 0) {\n                    //positivo\n                    if (arr.datos[variable] >= valor1) {\n                        severidad = 'Rojo';\n                    } else {\n                        if (arr.datos[variable] >= valor2 && arr.datos[variable] < valor1) {\n                            severidad = 'Amarillo';\n                        } else {\n                            severidad = 'Verde';\n                        }\n                    }\n                } else {\n                    //negativo\n                    if (arr.datos[variable] <= valor1) {\n                        severidad = 'Rojo';\n                    } else {\n                        if (arr.datos[variable] <= valor2 && arr.datos[variable] > valor1) {\n                            severidad = 'Amarillo';\n                        } else {\n                            severidad = 'Verde';\n                        }\n                    }\n                }\n                break;\n            case 'Combinada':\n                if (arr.datos[variable] < valor1 || arr.datos[variable] >= valor4) {\n                    severidad = 'Rojo';\n                } else {\n                    if ((arr.datos[variable] >= valor1 && arr.datos[variable] < valor2) || (arr.datos[variable] > valor3 && arr.datos[variable] < valor4)) {\n                        severidad = 'Amarillo';\n                    } else {\n                        severidad = 'Verde';\n                    }\n                }\n                break;\n        }\n        if (severidad != 'Verde' && severidad != '') {\n            notificacion = {\n                centro: centro,\n                variable: variable_visible,\n                valor: arr.datos[variable],\n                unidad_medida: simbolo,\n                fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                severidad: severidad\n            };\n            qry_insert = {\n                clima_alertas_id: alerta_id,\n                mongodb_id: String(arr._id),\n                severidad: severidad,\n                fecha: arr.fecha,\n                visto: false,\n                users_id: null,\n                respuestas_alertas_id: null,\n                comentario: ''\n            };\n\n            newMsg.push({\n                insert_data: qry_insert,\n                checkemail: checkemail,\n                checkbuzzer: checkbuzzer,\n                checksms: checksms,\n                centros_id: centros_id,\n                ip_port: ip_port,\n                notificacion: notificacion\n            });\n\n\n        }\n    }\n    \n}\n\n\nreturn [newMsg];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "geolib",
                "module": "geolib"
            },
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 930,
        "y": 260,
        "wires": [
            [
                "7d3b8e8200abfc53"
            ]
        ]
    },
    {
        "id": "6e4e825a11be2a10",
        "type": "mysql",
        "z": "887ae0d1a8656db5",
        "mydb": "e8b513b0daf9a8a1",
        "name": "",
        "x": 1240,
        "y": 180,
        "wires": [
            [
                "4f1e852cdaf8e346"
            ]
        ]
    },
    {
        "id": "2f0c67a50f29d79a",
        "type": "mongodb-objectid",
        "z": "887ae0d1a8656db5",
        "name": "ObjectId",
        "method": "find",
        "paths": [
            {
                "type": "query",
                "value": "_id"
            }
        ],
        "x": 560,
        "y": 180,
        "wires": [
            [
                "540beba11ee77126"
            ]
        ]
    },
    {
        "id": "540beba11ee77126",
        "type": "mongodb-collection",
        "z": "887ae0d1a8656db5",
        "name": "find clima",
        "config": "06f0cbf65e503a4c",
        "collection": "clima",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 720,
        "y": 180,
        "wires": [
            [
                "ab63723a20b66d80"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "7d3b8e8200abfc53",
        "type": "mongodb-collection",
        "z": "887ae0d1a8656db5",
        "name": "Insertar",
        "config": "06f0cbf65e503a4c",
        "collection": "alertas_clima",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "insert_data",
                "type": "msg"
            },
            "options": {
                "value": "option",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1120,
        "y": 260,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "2ae491a0deac6ab6",
        "type": "function",
        "z": "adde387b97c1cef1",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 240,
        "wires": [
            [
                "fe71d1aa8fe371b3"
            ]
        ]
    },
    {
        "id": "fe71d1aa8fe371b3",
        "type": "switch",
        "z": "adde387b97c1cef1",
        "name": "filter collection",
        "property": "payload.modulo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "clima",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sensores",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "energia",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad_detalle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "JaulaSmart",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 520,
        "y": 240,
        "wires": [
            [
                "77b31c47aca3723a"
            ],
            [
                "b04301ddb207e1e6"
            ],
            [
                "7815ad374db18e28"
            ],
            [
                "2f774ab5433bd03b"
            ],
            [
                "ef5a8b70c392cac7"
            ],
            []
        ]
    },
    {
        "id": "7b8756d2aca28cec",
        "type": "function",
        "z": "adde387b97c1cef1",
        "name": "Clima",
        "func": "msg.topic = 'clima';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "54bf812325febb96",
        "type": "function",
        "z": "adde387b97c1cef1",
        "name": "Sensores",
        "func": "msg.topic = 'sensores';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "e9afe83d1fdf8fa8",
        "type": "function",
        "z": "adde387b97c1cef1",
        "name": "Energia",
        "func": "msg.topic = 'energia';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "854d734d9c24e39a",
        "type": "function",
        "z": "adde387b97c1cef1",
        "d": true,
        "name": "Pasadores",
        "func": "msg.topic = 'pasadores';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "77b31c47aca3723a",
        "type": "mongodb-collection",
        "z": "adde387b97c1cef1",
        "name": "Insert-clima",
        "config": "6f054d21ac5818c5",
        "collection": "clima",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 830,
        "y": 100,
        "wires": [
            [
                "7b8756d2aca28cec"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "b04301ddb207e1e6",
        "type": "mongodb-collection",
        "z": "adde387b97c1cef1",
        "d": true,
        "name": "Insert-sensores",
        "config": "6f054d21ac5818c5",
        "collection": "sensores",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 840,
        "y": 180,
        "wires": [
            [
                "54bf812325febb96"
            ]
        ]
    },
    {
        "id": "7815ad374db18e28",
        "type": "mongodb-collection",
        "z": "adde387b97c1cef1",
        "d": true,
        "name": "Insert-energia",
        "config": "6f054d21ac5818c5",
        "collection": "energia",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 840,
        "y": 260,
        "wires": [
            [
                "e9afe83d1fdf8fa8"
            ]
        ]
    },
    {
        "id": "2f774ab5433bd03b",
        "type": "mongodb-collection",
        "z": "adde387b97c1cef1",
        "d": true,
        "name": "Insert-seguridad",
        "config": "6f054d21ac5818c5",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 840,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "ef5a8b70c392cac7",
        "type": "mongodb-collection",
        "z": "adde387b97c1cef1",
        "d": true,
        "name": "Insert-seguridad_detalle",
        "config": "6f054d21ac5818c5",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 870,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "02d458d7188790f8",
        "type": "switch",
        "z": "bf38bc9e8a01a671",
        "name": "filter collection",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "clima",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sensores",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "energia",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad_detalle",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 200,
        "y": 280,
        "wires": [
            [
                "adf9bd42f5a8257c"
            ],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "adf9bd42f5a8257c",
        "type": "function",
        "z": "bf38bc9e8a01a671",
        "name": "set _id",
        "func": "var id = msg.payload;\nmsg.query = {\n    _id: id\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "mongodb",
                "module": "mongodb"
            }
        ],
        "x": 390,
        "y": 180,
        "wires": [
            [
                "23426e58888fea29"
            ]
        ]
    },
    {
        "id": "8eba374e9de1846f",
        "type": "function",
        "z": "bf38bc9e8a01a671",
        "name": "Select alertas",
        "func": "var data = msg.payload[0];\nvar basedatos = 'wisensor_mowi';\nvar codigo_empresa = data.empresa;\nvar codigo_centro = data.codigo_centro;\n\nvar query = \"SELECT  a.id as alerta_id, e.mongodb, e.codigo as codigo_empresa, cc.codigo_interno, a.created_at as fecha,  cc.latitud, cc.longitud, cc.heading_inicial,\" +\n\"sv.nombre_real, a.tipo_alerta, cc.ip_port, a.tipo_dato, a.valor1, a.valor2, a.valor3, a.valor4, a.checkemail, a.checkbuzzer, a.centros_id, sv.nombre_visible, sv.simbolo, c.nombre\" +\n\" FROM clima_alertas AS a\" +\n\" INNER JOIN centros AS c ON a.centros_id = c.id\" +\n\" INNER JOIN empresas AS e ON c.empresas_id = e.id\" +\n\" INNER JOIN sistema_variables AS sv ON a.sistema_variables_id = sv.id\" +\n\" INNER JOIN centros_concesiones AS cc ON a.centros_id = cc.centros_id\" +\n\" WHERE a.activo = 1 \" +\n\" AND c.activo = 1\" +\n\" AND a.activo = 1\" +\n\" AND cc.activo = 1\" +\n\" AND e.mongodb = '\"+basedatos +\"' \"+\n\" AND cc.codigo_interno = '\" + codigo_centro + \"' \" +\n\" AND e.codigo = '\" + codigo_empresa + \"' \" +\n\" AND a.deleted_at IS NULL\" +\n\" AND c.deleted_at IS NULL\"+\n\" AND e.deleted_at IS NULL\";\nmsg.topic = query;\nmsg.data = data;\nreturn msg; \n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 180,
        "wires": [
            [
                "ddbbfaf117bfb7ef"
            ]
        ]
    },
    {
        "id": "48c4c4ea48468888",
        "type": "function",
        "z": "bf38bc9e8a01a671",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 180,
        "wires": [
            [
                "8eba374e9de1846f"
            ]
        ]
    },
    {
        "id": "689692afb8341c16",
        "type": "function",
        "z": "bf38bc9e8a01a671",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 260,
        "wires": [
            [
                "27f5e50dfc84ecb9"
            ]
        ]
    },
    {
        "id": "27f5e50dfc84ecb9",
        "type": "function",
        "z": "bf38bc9e8a01a671",
        "name": "loop and search",
        "func": "var newMsg = [];\nvar arr = msg.payload;\nvar alerta = [];\nvar datos = msg.data;\n\nfor (var i = 0; i < arr.length; i++) {\n    alerta.push({\n        alerta_id: arr[i].alerta_id,\n        fecha: new moment(arr[i].fecha).format(\"YYYY-MM-DD\"),\n        mongodb: arr[i].mongodb,\n        codigo_empresa: arr[i].codigo_empresa,\n        codigo_interno: arr[i].codigo_interno,\n        variable: arr[i].nombre_real,\n        tipo_alerta: arr[i].tipo_alerta,\n        tipo_dato: arr[i].tipo_dato,\n        latitud: arr[i].latitud,\n        longitud: arr[i].longitud,\n        heading_inicial: arr[i].heading_inicial,\n        valor1: arr[i].valor1,\n        valor2: arr[i].valor2,\n        valor3: arr[i].valor3,\n        valor4: arr[i].valor4,  \n        checkemail: arr[i].checkemail,  \n        checkbuzzer: arr[i].checkbuzzer, \n        centros_id: arr[i].centros_id,\n        ip_port: arr[i].ip_port,\n        nombre_visible: arr[i].nombre_visible,\n        simbolo: arr[i].simbolo,\n        centro: arr[i].nombre\n    });    \n}\nnewMsg.push({\n    data: datos,\n    alertas: alerta\n});\n\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 680,
        "y": 260,
        "wires": [
            [
                "d213fee2d673dadb"
            ]
        ]
    },
    {
        "id": "d213fee2d673dadb",
        "type": "function",
        "z": "bf38bc9e8a01a671",
        "name": "Insertar si no existe",
        "func": "var qry_insert = '';\nvar newMsg = [];\nvar alertas = msg.alertas;\nvar arr = msg.data;\nvar notificacion = [];\n\nfor (let index = 0; index < alertas.length; index++) {\n    var alerta_id = alertas[index].alerta_id;\n    var variable = alertas[index].variable;\n    var variable_visible = alertas[index].nombre_visible;\n    var simbolo = alertas[index].simbolo;\n    var database = alertas[index].mongodb;\n    var tipo_dato = alertas[index].tipo_dato;\n    var valor1 = alertas[index].valor1;\n    var valor2 = alertas[index].valor2;\n    var valor3 = alertas[index].valor3;\n    var valor4 = alertas[index].valor4;\n    var tipo_alerta = alertas[index].tipo_alerta;\n    var ip_port = alertas[index].ip_port;\n    var centro = alertas[index].centro;\n\n    var checkemail = alertas[index].checkemail;\n    var checkbuzzer = alertas[index].checkbuzzer; \n    var centros_id = alertas[index].centros_id; \n    var checksms = 1;\n\n    var latitud = alertas[index].latitud;\n    var longitud = alertas[index].longitud;\n\n    switch (tipo_dato) {\n        case 'Integer':\n            valor1 = parseInt(valor1);\n            valor2 = parseInt(valor2);\n            valor3 = valor3 != null ? parseInt(valor3) : null;\n            valor4 = valor4 != null ? parseInt(valor4) : null;\n            break;\n        case 'Float':\n            valor1 = parseFloat(valor1);\n            valor2 = parseFloat(valor2);\n            valor3 = valor3 != null ? parseFloat(valor3) : null;\n            valor4 = valor4 != null ? parseFloat(valor4) : null;\n            break;\n    }\n\n    var severidad = '';\n    if (variable == 'desviacionGPS') {\n        if (tipo_alerta == 'Simple'){\n            var long = arr.datos[variable].coordinates[0];\n            var latit = arr.datos[variable].coordinates[1];\n            var distancia = geolib.getPreciseDistance(\n                { latitude: latitud, longitude: longitud },\n                { latitude: latit, longitude: long },\n            );\n            if (valor1 > 0) {\n                //positivo\n                if (distancia >= valor1) {\n                    severidad = 'Rojo';\n                } else {\n                    if (distancia >= valor2 && distancia < valor1) {\n                        severidad = 'Amarillo';\n                    } else {\n                        severidad = 'Verde';\n                    }\n                }\n            }\n\n            if (severidad != 'Verde' && severidad != '') {\n                var unid = '';\n                var dist = 0;\n                if(distancia < 1000){\n                    unid = 'm';\n                    dist = distancia;\n                } else {\n                    unid = 'km';\n                    dist = geolib.convertDistance(distancia, 'km');\n                }\n                notificacion = {\n                    centro: centro,\n                    variable: variable_visible,\n                    valor: dist,\n                    unidad_medida: unid,\n                    fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                    severidad: severidad\n                };\n                \n                qry_insert = {\n                    clima_alertas_id: alerta_id,\n                    mongodb_id: String(arr._id),\n                    severidad: severidad,\n                    fecha: arr.fecha,\n                    visto: false,\n                    users_id: null,\n                    respuestas_alertas_id: null,\n                    comentario: ''\n                };\n\n                newMsg.push({\n                    insert_data: qry_insert,\n                    checkemail: checkemail,\n                    checkbuzzer: checkbuzzer,\n                    checksms: checksms,  \n                    centros_id: centros_id,\n                    ip_port: ip_port,\n                    notificacion: notificacion\n                });\n\n            }\n        }\n    } else if (variable == 'heading'){\n        if (tipo_alerta == 'Combinada') {\n            var heading_error = 0;\n            var setpoint = parseFloat(alertas[index].heading_inicial);\n            var heading_actual = parseFloat(arr.datos[variable]);\n            heading_error = setpoint - heading_actual;\n\n            if(heading_error <= valor1 || heading_error >= valor4){\n                severidad = 'Rojo';\n            } else {\n                if ((heading_error > valor1 && heading_error <= valor2) || (heading_error >= valor3 && heading_error < valor4)) {\n                    severidad = 'Amarillo';\n                } else {\n                    severidad = 'Verde';\n                }\n            }\n\n            if (severidad != 'Verde' && severidad != '') {\n\n                notificacion = {\n                    centro: centro,\n                    variable: variable_visible,\n                    valor: heading_error,\n                    unidad_medida: simbolo,\n                    fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                    severidad: severidad\n                };\n\n                qry_insert = {\n                    clima_alertas_id: alerta_id,\n                    mongodb_id: String(arr._id),\n                    severidad: severidad,\n                    fecha: arr.fecha,\n                    visto: false,\n                    users_id: null,\n                    respuestas_alertas_id: null,\n                    comentario: ''\n                };\n\n                newMsg.push({\n                    insert_data: qry_insert,\n                    checkemail: checkemail,\n                    checkbuzzer: checkbuzzer,\n                    checksms: checksms,\n                    centros_id: centros_id,\n                    ip_port: ip_port,\n                    notificacion: notificacion\n                });\n\n            }\n        }\n    \n    } else {\n        switch (tipo_alerta) {\n            case 'Simple':\n                if (valor1 > 0) {\n                    //positivo\n                    if (arr.datos[variable] >= valor1) {\n                        severidad = 'Rojo';\n                    } else {\n                        if (arr.datos[variable] >= valor2 && arr.datos[variable] < valor1) {\n                            severidad = 'Amarillo';\n                        } else {\n                            severidad = 'Verde';\n                        }\n                    }\n                } else {\n                    //negativo\n                    if (arr.datos[variable] <= valor1) {\n                        severidad = 'Rojo';\n                    } else {\n                        if (arr.datos[variable] <= valor2 && arr.datos[variable] > valor1) {\n                            severidad = 'Amarillo';\n                        } else {\n                            severidad = 'Verde';\n                        }\n                    }\n                }\n                break;\n            case 'Combinada':\n                if (arr.datos[variable] < valor1 || arr.datos[variable] >= valor4) {\n                    severidad = 'Rojo';\n                } else {\n                    if ((arr.datos[variable] >= valor1 && arr.datos[variable] < valor2) || (arr.datos[variable] > valor3 && arr.datos[variable] < valor4)) {\n                        severidad = 'Amarillo';\n                    } else {\n                        severidad = 'Verde';\n                    }\n                }\n                break;\n        }\n        if (severidad != 'Verde' && severidad != '') {\n            notificacion = {\n                centro: centro,\n                variable: variable_visible,\n                valor: arr.datos[variable],\n                unidad_medida: simbolo,\n                fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                severidad: severidad\n            };\n            qry_insert = {\n                clima_alertas_id: alerta_id,\n                mongodb_id: String(arr._id),\n                severidad: severidad,\n                fecha: arr.fecha,\n                visto: false,\n                users_id: null,\n                respuestas_alertas_id: null,\n                comentario: ''\n            };\n\n            newMsg.push({\n                insert_data: qry_insert,\n                checkemail: checkemail,\n                checkbuzzer: checkbuzzer,\n                checksms: checksms,\n                centros_id: centros_id,\n                ip_port: ip_port,\n                notificacion: notificacion\n            });\n\n\n        }\n    }\n    \n}\n\n\nreturn [newMsg];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "geolib",
                "module": "geolib"
            },
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 910,
        "y": 260,
        "wires": [
            [
                "c9c665ee0e1cf172"
            ]
        ]
    },
    {
        "id": "ddbbfaf117bfb7ef",
        "type": "mysql",
        "z": "bf38bc9e8a01a671",
        "mydb": "e8b513b0daf9a8a1",
        "name": "",
        "x": 1220,
        "y": 180,
        "wires": [
            [
                "689692afb8341c16"
            ]
        ]
    },
    {
        "id": "23426e58888fea29",
        "type": "mongodb-objectid",
        "z": "bf38bc9e8a01a671",
        "name": "ObjectId",
        "method": "find",
        "paths": [
            {
                "type": "query",
                "value": "_id"
            }
        ],
        "x": 540,
        "y": 180,
        "wires": [
            [
                "0f341a8ffbe12905"
            ]
        ]
    },
    {
        "id": "0f341a8ffbe12905",
        "type": "mongodb-collection",
        "z": "bf38bc9e8a01a671",
        "name": "find clima",
        "config": "cdbd46fb8c8e74a1",
        "collection": "clima",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 700,
        "y": 180,
        "wires": [
            [
                "48c4c4ea48468888"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "c9c665ee0e1cf172",
        "type": "mongodb-collection",
        "z": "bf38bc9e8a01a671",
        "name": "Insertar",
        "config": "cdbd46fb8c8e74a1",
        "collection": "alertas_clima",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "insert_data",
                "type": "msg"
            },
            "options": {
                "value": "option",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1100,
        "y": 260,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "878928a8e0ffa78f",
        "type": "function",
        "z": "1bfaf0ee9cf5edea",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 260,
        "wires": [
            [
                "6a946e27d00c1806"
            ]
        ]
    },
    {
        "id": "6a946e27d00c1806",
        "type": "switch",
        "z": "1bfaf0ee9cf5edea",
        "name": "filter collection",
        "property": "payload.modulo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "clima",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sensores",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "energia",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad_detalle",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 480,
        "y": 260,
        "wires": [
            [
                "0ca8926386a5faa6"
            ],
            [
                "aca9f767ae14d912"
            ],
            [
                "24598deb9acf1976"
            ],
            [
                "8ad75a8bd0ff43de"
            ],
            [
                "b1915295ad96a2ac"
            ]
        ]
    },
    {
        "id": "56dfc1f84a1d374d",
        "type": "function",
        "z": "1bfaf0ee9cf5edea",
        "name": "Clima",
        "func": "msg.topic = 'clima';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "48fc0ecd22a66df2",
        "type": "function",
        "z": "1bfaf0ee9cf5edea",
        "name": "Sensores",
        "func": "msg.topic = 'sensores';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1029,
        "y": 174,
        "wires": [
            []
        ]
    },
    {
        "id": "7cefe174b9c9ae6d",
        "type": "function",
        "z": "1bfaf0ee9cf5edea",
        "name": "Energia",
        "func": "msg.topic = 'energia';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "0ca8926386a5faa6",
        "type": "mongodb-collection",
        "z": "1bfaf0ee9cf5edea",
        "name": "Insert-clima",
        "config": "36fee6712aa1cef4",
        "collection": "clima",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 790,
        "y": 120,
        "wires": [
            [
                "56dfc1f84a1d374d"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "aca9f767ae14d912",
        "type": "mongodb-collection",
        "z": "1bfaf0ee9cf5edea",
        "name": "Insert-sensores",
        "config": "36fee6712aa1cef4",
        "collection": "sensores",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 800,
        "y": 180,
        "wires": [
            [
                "48fc0ecd22a66df2"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "24598deb9acf1976",
        "type": "mongodb-collection",
        "z": "1bfaf0ee9cf5edea",
        "name": "Insert-energia",
        "config": "36fee6712aa1cef4",
        "collection": "energia",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 800,
        "y": 240,
        "wires": [
            [
                "7cefe174b9c9ae6d"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "8ad75a8bd0ff43de",
        "type": "mongodb-collection",
        "z": "1bfaf0ee9cf5edea",
        "d": true,
        "name": "Insert-seguridad",
        "config": "36fee6712aa1cef4",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 800,
        "y": 300,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "b1915295ad96a2ac",
        "type": "mongodb-collection",
        "z": "1bfaf0ee9cf5edea",
        "d": true,
        "name": "Insert-seguridad_detalle",
        "config": "36fee6712aa1cef4",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 830,
        "y": 360,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "518968bd7cf65156",
        "type": "switch",
        "z": "546efd75fe681e29",
        "name": "filter collection",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "clima",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sensores",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "energia",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad_detalle",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 200,
        "y": 420,
        "wires": [
            [
                "29685b9a7f673447"
            ],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "29685b9a7f673447",
        "type": "function",
        "z": "546efd75fe681e29",
        "name": "set _id",
        "func": "var id = msg.payload;\nmsg.query = {\n    _id: id\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "mongodb",
                "module": "mongodb"
            }
        ],
        "x": 430,
        "y": 100,
        "wires": [
            [
                "ce35e6f90b3537a2"
            ]
        ]
    },
    {
        "id": "c5ca0957df3df9ec",
        "type": "function",
        "z": "546efd75fe681e29",
        "name": "Select alertas",
        "func": "var data = msg.payload[0];\nvar basedatos = 'wisensor_gmt';\nvar codigo_empresa = data.empresa;\nvar codigo_centro = data.codigo_centro;\n\nvar query = \"SELECT  a.id as alerta_id, e.mongodb, e.codigo as codigo_empresa, cc.codigo_interno, a.created_at as fecha,  cc.latitud, cc.longitud, cc.heading_inicial,\" +\n\"sv.nombre_real, a.tipo_alerta, cc.ip_port, a.tipo_dato, a.valor1, a.valor2, a.valor3, a.valor4, a.checkemail, a.checkbuzzer, a.centros_id, sv.nombre_visible, sv.simbolo, c.nombre\" +\n\" FROM clima_alertas AS a\" +\n\" INNER JOIN centros AS c ON a.centros_id = c.id\" +\n\" INNER JOIN empresas AS e ON c.empresas_id = e.id\" +\n\" INNER JOIN sistema_variables AS sv ON a.sistema_variables_id = sv.id\" +\n\" INNER JOIN centros_concesiones AS cc ON a.centros_id = cc.centros_id\" +\n\" WHERE a.activo = 1 \" +\n\" AND c.activo = 1\" +\n\" AND a.activo = 1\" +\n\" AND cc.activo = 1\" +\n\" AND e.mongodb = '\"+basedatos +\"' \"+\n\" AND cc.codigo_interno = '\" + codigo_centro + \"' \" +\n\" AND e.codigo = '\" + codigo_empresa + \"' \" +\n\" AND a.deleted_at IS NULL\" +\n\" AND c.deleted_at IS NULL\"+\n\" AND e.deleted_at IS NULL\";\nmsg.topic = query;\nmsg.data = data;\nreturn msg; \n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 100,
        "wires": [
            [
                "36db6220b3645275"
            ]
        ]
    },
    {
        "id": "fca7d0bc99502146",
        "type": "function",
        "z": "546efd75fe681e29",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 100,
        "wires": [
            [
                "c5ca0957df3df9ec"
            ]
        ]
    },
    {
        "id": "e825838d64a7c130",
        "type": "function",
        "z": "546efd75fe681e29",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 180,
        "wires": [
            [
                "c0ba0d5ae3b7cecd"
            ]
        ]
    },
    {
        "id": "c0ba0d5ae3b7cecd",
        "type": "function",
        "z": "546efd75fe681e29",
        "name": "loop and search",
        "func": "var newMsg = [];\nvar arr = msg.payload;\nvar alerta = [];\nvar datos = msg.data;\n\nfor (var i = 0; i < arr.length; i++) {\n    alerta.push({\n        alerta_id: arr[i].alerta_id,\n        fecha: new moment(arr[i].fecha).format(\"YYYY-MM-DD\"),\n        mongodb: arr[i].mongodb,\n        codigo_empresa: arr[i].codigo_empresa,\n        codigo_interno: arr[i].codigo_interno,\n        variable: arr[i].nombre_real,\n        tipo_alerta: arr[i].tipo_alerta,\n        tipo_dato: arr[i].tipo_dato,\n        latitud: arr[i].latitud,\n        longitud: arr[i].longitud,\n        heading_inicial: arr[i].heading_inicial,\n        valor1: arr[i].valor1,\n        valor2: arr[i].valor2,\n        valor3: arr[i].valor3,\n        valor4: arr[i].valor4,  \n        checkemail: arr[i].checkemail,  \n        checkbuzzer: arr[i].checkbuzzer, \n        centros_id: arr[i].centros_id,\n        ip_port: arr[i].ip_port,\n        nombre_visible: arr[i].nombre_visible,\n        simbolo: arr[i].simbolo,\n        centro: arr[i].nombre\n    });    \n}\nnewMsg.push({\n    data: datos,\n    alertas: alerta\n});\n\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 720,
        "y": 180,
        "wires": [
            [
                "7ea32dc60ea3a0dc"
            ]
        ]
    },
    {
        "id": "7ea32dc60ea3a0dc",
        "type": "function",
        "z": "546efd75fe681e29",
        "name": "Insertar si no existe",
        "func": "var qry_insert = '';\nvar newMsg = [];\nvar alertas = msg.alertas;\nvar arr = msg.data;\nvar notificacion = [];\n\nfor (let index = 0; index < alertas.length; index++) {\n    var alerta_id = alertas[index].alerta_id;\n    var variable = alertas[index].variable;\n    var variable_visible = alertas[index].nombre_visible;\n    var simbolo = alertas[index].simbolo;\n    var database = alertas[index].mongodb;\n    var tipo_dato = alertas[index].tipo_dato;\n    var valor1 = alertas[index].valor1;\n    var valor2 = alertas[index].valor2;\n    var valor3 = alertas[index].valor3;\n    var valor4 = alertas[index].valor4;\n    var tipo_alerta = alertas[index].tipo_alerta;\n    var ip_port = alertas[index].ip_port;\n    var centro = alertas[index].centro;\n\n    var checkemail = alertas[index].checkemail;\n    var checkbuzzer = alertas[index].checkbuzzer; \n    var centros_id = alertas[index].centros_id; \n    var checksms = 1;\n\n    var latitud = alertas[index].latitud;\n    var longitud = alertas[index].longitud;\n\n    switch (tipo_dato) {\n        case 'Integer':\n            valor1 = parseInt(valor1);\n            valor2 = parseInt(valor2);\n            valor3 = valor3 != null ? parseInt(valor3) : null;\n            valor4 = valor4 != null ? parseInt(valor4) : null;\n            break;\n        case 'Float':\n            valor1 = parseFloat(valor1);\n            valor2 = parseFloat(valor2);\n            valor3 = valor3 != null ? parseFloat(valor3) : null;\n            valor4 = valor4 != null ? parseFloat(valor4) : null;\n            break;\n    }\n\n    var severidad = '';\n    if (variable == 'desviacionGPS') {\n        if (tipo_alerta == 'Simple'){\n            var long = arr.datos[variable].coordinates[0];\n            var latit = arr.datos[variable].coordinates[1];\n            var distancia = geolib.getPreciseDistance(\n                { latitude: latitud, longitude: longitud },\n                { latitude: latit, longitude: long },\n            );\n            if (valor1 > 0) {\n                //positivo\n                if (distancia >= valor1) {\n                    severidad = 'Rojo';\n                } else {\n                    if (distancia >= valor2 && distancia < valor1) {\n                        severidad = 'Amarillo';\n                    } else {\n                        severidad = 'Verde';\n                    }\n                }\n            }\n\n            if (severidad != 'Verde' && severidad != '') {\n                var unid = '';\n                var dist = 0;\n                if(distancia < 1000){\n                    unid = 'm';\n                    dist = distancia;\n                } else {\n                    unid = 'km';\n                    dist = geolib.convertDistance(distancia, 'km');\n                }\n                notificacion = {\n                    centro: centro,\n                    variable: variable_visible,\n                    valor: dist,\n                    unidad_medida: unid,\n                    fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                    severidad: severidad\n                };\n                \n                qry_insert = {\n                    clima_alertas_id: alerta_id,\n                    mongodb_id: String(arr._id),\n                    severidad: severidad,\n                    fecha: arr.fecha,\n                    visto: false,\n                    users_id: null,\n                    respuestas_alertas_id: null,\n                    comentario: ''\n                };\n\n                newMsg.push({\n                    insert_data: qry_insert,\n                    checkemail: checkemail,\n                    checkbuzzer: checkbuzzer,\n                    checksms: checksms,  \n                    centros_id: centros_id,\n                    ip_port: ip_port,\n                    notificacion: notificacion\n                });\n\n            }\n        }\n    } else if (variable == 'heading'){\n        if (tipo_alerta == 'Combinada') {\n            var heading_error = 0;\n            var setpoint = parseFloat(alertas[index].heading_inicial);\n            var heading_actual = parseFloat(arr.datos[variable]);\n            heading_error = setpoint - heading_actual;\n\n            if(heading_error <= valor1 || heading_error >= valor4){\n                severidad = 'Rojo';\n            } else {\n                if ((heading_error > valor1 && heading_error <= valor2) || (heading_error >= valor3 && heading_error < valor4)) {\n                    severidad = 'Amarillo';\n                } else {\n                    severidad = 'Verde';\n                }\n            }\n\n            if (severidad != 'Verde' && severidad != '') {\n\n                notificacion = {\n                    centro: centro,\n                    variable: variable_visible,\n                    valor: heading_error,\n                    unidad_medida: simbolo,\n                    fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                    severidad: severidad\n                };\n\n                qry_insert = {\n                    clima_alertas_id: alerta_id,\n                    mongodb_id: String(arr._id),\n                    severidad: severidad,\n                    fecha: arr.fecha,\n                    visto: false,\n                    users_id: null,\n                    respuestas_alertas_id: null,\n                    comentario: ''\n                };\n\n                newMsg.push({\n                    insert_data: qry_insert,\n                    checkemail: checkemail,\n                    checkbuzzer: checkbuzzer,\n                    checksms: checksms,\n                    centros_id: centros_id,\n                    ip_port: ip_port,\n                    notificacion: notificacion\n                });\n\n            }\n        }\n    \n    } else {\n        switch (tipo_alerta) {\n            case 'Simple':\n                if (valor1 > 0) {\n                    //positivo\n                    if (arr.datos[variable] >= valor1) {\n                        severidad = 'Rojo';\n                    } else {\n                        if (arr.datos[variable] >= valor2 && arr.datos[variable] < valor1) {\n                            severidad = 'Amarillo';\n                        } else {\n                            severidad = 'Verde';\n                        }\n                    }\n                } else {\n                    //negativo\n                    if (arr.datos[variable] <= valor1) {\n                        severidad = 'Rojo';\n                    } else {\n                        if (arr.datos[variable] <= valor2 && arr.datos[variable] > valor1) {\n                            severidad = 'Amarillo';\n                        } else {\n                            severidad = 'Verde';\n                        }\n                    }\n                }\n                break;\n            case 'Combinada':\n                if (arr.datos[variable] < valor1 || arr.datos[variable] >= valor4) {\n                    severidad = 'Rojo';\n                } else {\n                    if ((arr.datos[variable] >= valor1 && arr.datos[variable] < valor2) || (arr.datos[variable] > valor3 && arr.datos[variable] < valor4)) {\n                        severidad = 'Amarillo';\n                    } else {\n                        severidad = 'Verde';\n                    }\n                }\n                break;\n        }\n        if (severidad != 'Verde' && severidad != '') {\n            notificacion = {\n                centro: centro,\n                variable: variable_visible,\n                valor: arr.datos[variable],\n                unidad_medida: simbolo,\n                fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                severidad: severidad\n            };\n            qry_insert = {\n                clima_alertas_id: alerta_id,\n                mongodb_id: String(arr._id),\n                severidad: severidad,\n                fecha: arr.fecha,\n                visto: false,\n                users_id: null,\n                respuestas_alertas_id: null,\n                comentario: ''\n            };\n\n            newMsg.push({\n                insert_data: qry_insert,\n                checkemail: checkemail,\n                checkbuzzer: checkbuzzer,\n                checksms: checksms,\n                centros_id: centros_id,\n                ip_port: ip_port,\n                notificacion: notificacion\n            });\n\n\n        }\n    }\n    \n}\n\n\nreturn [newMsg];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "geolib",
                "module": "geolib"
            },
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 950,
        "y": 180,
        "wires": [
            [
                "bf58f7c504f7a37c"
            ]
        ]
    },
    {
        "id": "36db6220b3645275",
        "type": "mysql",
        "z": "546efd75fe681e29",
        "mydb": "e8b513b0daf9a8a1",
        "name": "",
        "x": 1260,
        "y": 100,
        "wires": [
            [
                "e825838d64a7c130"
            ]
        ]
    },
    {
        "id": "ce35e6f90b3537a2",
        "type": "mongodb-objectid",
        "z": "546efd75fe681e29",
        "name": "ObjectId",
        "method": "find",
        "paths": [
            {
                "type": "query",
                "value": "_id"
            }
        ],
        "x": 580,
        "y": 100,
        "wires": [
            [
                "c1d32d54cd73ef28"
            ]
        ]
    },
    {
        "id": "c1d32d54cd73ef28",
        "type": "mongodb-collection",
        "z": "546efd75fe681e29",
        "name": "find clima",
        "config": "aea86e27262eaf28",
        "collection": "clima",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 740,
        "y": 100,
        "wires": [
            [
                "fca7d0bc99502146"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "bf58f7c504f7a37c",
        "type": "mongodb-collection",
        "z": "546efd75fe681e29",
        "name": "Insertar",
        "config": "aea86e27262eaf28",
        "collection": "alertas_clima",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "insert_data",
                "type": "msg"
            },
            "options": {
                "value": "option",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1140,
        "y": 180,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "754de5eed2a87894",
        "type": "switch",
        "z": "d2c65b34ecc66d63",
        "name": "filter collection",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "clima",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sensores",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "energia",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad_detalle",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 180,
        "y": 200,
        "wires": [
            [
                "8095cad8a8d3306b"
            ],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "8095cad8a8d3306b",
        "type": "function",
        "z": "d2c65b34ecc66d63",
        "name": "set _id",
        "func": "var id = msg.payload;\nmsg.query = {\n    _id: id\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "mongodb",
                "module": "mongodb"
            }
        ],
        "x": 370,
        "y": 100,
        "wires": [
            [
                "f5adec8cd08f6b69"
            ]
        ]
    },
    {
        "id": "1f906324e5711437",
        "type": "function",
        "z": "d2c65b34ecc66d63",
        "name": "Select alertas",
        "func": "var data = msg.payload[0];\nvar basedatos = 'wisensor_test';\nvar codigo_empresa = data.empresa;\nvar codigo_centro = data.codigo_centro;\n\nvar query = \"SELECT  a.id as alerta_id, e.mongodb, e.codigo as codigo_empresa, cc.codigo_interno, a.created_at as fecha,  cc.latitud, cc.longitud, cc.heading_inicial,\" +\n\"sv.nombre_real, a.tipo_alerta, cc.ip_port, a.tipo_dato, a.valor1, a.valor2, a.valor3, a.valor4, a.checkemail, a.checkbuzzer, a.centros_id, sv.nombre_visible, sv.simbolo, c.nombre\" +\n\" FROM clima_alertas AS a\" +\n\" INNER JOIN centros AS c ON a.centros_id = c.id\" +\n\" INNER JOIN empresas AS e ON c.empresas_id = e.id\" +\n\" INNER JOIN sistema_variables AS sv ON a.sistema_variables_id = sv.id\" +\n\" INNER JOIN centros_concesiones AS cc ON a.centros_id = cc.centros_id\" +\n\" WHERE a.activo = 1 \" +\n\" AND c.activo = 1\" +\n\" AND a.activo = 1\" +\n\" AND cc.activo = 1\" +\n\" AND e.mongodb = '\"+basedatos +\"' \"+\n\" AND cc.codigo_interno = '\" + codigo_centro + \"' \" +\n\" AND e.codigo = '\" + codigo_empresa + \"' \" +\n\" AND a.deleted_at IS NULL\" +\n\" AND c.deleted_at IS NULL\"+\n\" AND e.deleted_at IS NULL\";\nmsg.topic = query;\nmsg.data = data;\nreturn msg; \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 100,
        "wires": [
            [
                "a1d55bc4011736fe"
            ]
        ]
    },
    {
        "id": "0edd95db792dc183",
        "type": "function",
        "z": "d2c65b34ecc66d63",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 100,
        "wires": [
            [
                "1f906324e5711437"
            ]
        ]
    },
    {
        "id": "731ec1316215a959",
        "type": "function",
        "z": "d2c65b34ecc66d63",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 180,
        "wires": [
            [
                "9eb1d1b8047f6d9a"
            ]
        ]
    },
    {
        "id": "9eb1d1b8047f6d9a",
        "type": "function",
        "z": "d2c65b34ecc66d63",
        "name": "loop and search",
        "func": "var newMsg = [];\nvar arr = msg.payload;\nvar alerta = [];\nvar datos = msg.data;\n\nfor (var i = 0; i < arr.length; i++) {\n    alerta.push({\n        alerta_id: arr[i].alerta_id,\n        fecha: new moment(arr[i].fecha).format(\"YYYY-MM-DD\"),\n        mongodb: arr[i].mongodb,\n        codigo_empresa: arr[i].codigo_empresa,\n        codigo_interno: arr[i].codigo_interno,\n        variable: arr[i].nombre_real,\n        tipo_alerta: arr[i].tipo_alerta,\n        tipo_dato: arr[i].tipo_dato,\n        latitud: arr[i].latitud,\n        longitud: arr[i].longitud,\n        heading_inicial: arr[i].heading_inicial,\n        valor1: arr[i].valor1,\n        valor2: arr[i].valor2,\n        valor3: arr[i].valor3,\n        valor4: arr[i].valor4,  \n        checkemail: arr[i].checkemail,  \n        checkbuzzer: arr[i].checkbuzzer, \n        centros_id: arr[i].centros_id,\n        ip_port: arr[i].ip_port,\n        nombre_visible: arr[i].nombre_visible,\n        simbolo: arr[i].simbolo,\n        centro: arr[i].nombre\n    });    \n}\nnewMsg.push({\n    data: datos,\n    alertas: alerta\n});\n\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 660,
        "y": 180,
        "wires": [
            [
                "c87d4250840fa3d7"
            ]
        ]
    },
    {
        "id": "c87d4250840fa3d7",
        "type": "function",
        "z": "d2c65b34ecc66d63",
        "name": "Insertar si no existe",
        "func": "var qry_insert = '';\nvar newMsg = [];\nvar alertas = msg.alertas;\nvar arr = msg.data;\nvar notificacion = [];\n\nfor (let index = 0; index < alertas.length; index++) {\n    var alerta_id = alertas[index].alerta_id;\n    var variable = alertas[index].variable;\n    var variable_visible = alertas[index].nombre_visible;\n    var simbolo = alertas[index].simbolo;\n    var database = alertas[index].mongodb;\n    var tipo_dato = alertas[index].tipo_dato;\n    var valor1 = alertas[index].valor1;\n    var valor2 = alertas[index].valor2;\n    var valor3 = alertas[index].valor3;\n    var valor4 = alertas[index].valor4;\n    var tipo_alerta = alertas[index].tipo_alerta;\n    var ip_port = alertas[index].ip_port;\n    var centro = alertas[index].centro;\n\n    var checkemail = alertas[index].checkemail;\n    var checkbuzzer = alertas[index].checkbuzzer; \n    var centros_id = alertas[index].centros_id; \n    var checksms = 1;\n\n    var latitud = alertas[index].latitud;\n    var longitud = alertas[index].longitud;\n\n    switch (tipo_dato) {\n        case 'Integer':\n            valor1 = parseInt(valor1);\n            valor2 = parseInt(valor2);\n            valor3 = valor3 != null ? parseInt(valor3) : null;\n            valor4 = valor4 != null ? parseInt(valor4) : null;\n            break;\n        case 'Float':\n            valor1 = parseFloat(valor1);\n            valor2 = parseFloat(valor2);\n            valor3 = valor3 != null ? parseFloat(valor3) : null;\n            valor4 = valor4 != null ? parseFloat(valor4) : null;\n            break;\n    }\n\n    var severidad = '';\n    if (variable == 'desviacionGPS') {\n        if (tipo_alerta == 'Simple'){\n            var long = arr.datos[variable].coordinates[0];\n            var latit = arr.datos[variable].coordinates[1];\n            var distancia = geolib.getPreciseDistance(\n                { latitude: latitud, longitude: longitud },\n                { latitude: latit, longitude: long },\n            );\n            if (valor1 > 0) {\n                //positivo\n                if (distancia >= valor1) {\n                    severidad = 'Rojo';\n                } else {\n                    if (distancia >= valor2 && distancia < valor1) {\n                        severidad = 'Amarillo';\n                    } else {\n                        severidad = 'Verde';\n                    }\n                }\n            }\n\n            if (severidad != 'Verde' && severidad != '') {\n                var unid = '';\n                var dist = 0;\n                if(distancia < 1000){\n                    unid = 'm';\n                    dist = distancia;\n                } else {\n                    unid = 'km';\n                    dist = geolib.convertDistance(distancia, 'km');\n                }\n                notificacion = {\n                    centro: centro,\n                    variable: variable_visible,\n                    valor: dist,\n                    unidad_medida: unid,\n                    fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                    severidad: severidad\n                };\n                \n                qry_insert = {\n                    clima_alertas_id: alerta_id,\n                    mongodb_id: String(arr._id),\n                    severidad: severidad,\n                    fecha: arr.fecha,\n                    visto: false,\n                    users_id: null,\n                    respuestas_alertas_id: null,\n                    comentario: ''\n                };\n\n                newMsg.push({\n                    insert_data: qry_insert,\n                    checkemail: checkemail,\n                    checkbuzzer: checkbuzzer,\n                    checksms: checksms,  \n                    centros_id: centros_id,\n                    ip_port: ip_port,\n                    notificacion: notificacion\n                });\n\n            }\n        }\n    } else if (variable == 'heading'){\n        if (tipo_alerta == 'Combinada') {\n            var heading_error = 0;\n            var setpoint = parseFloat(alertas[index].heading_inicial);\n            var heading_actual = parseFloat(arr.datos[variable]);\n            heading_error = setpoint - heading_actual;\n\n            if(heading_error <= valor1 || heading_error >= valor4){\n                severidad = 'Rojo';\n            } else {\n                if ((heading_error > valor1 && heading_error <= valor2) || (heading_error >= valor3 && heading_error < valor4)) {\n                    severidad = 'Amarillo';\n                } else {\n                    severidad = 'Verde';\n                }\n            }\n\n            if (severidad != 'Verde' && severidad != '') {\n\n                notificacion = {\n                    centro: centro,\n                    variable: variable_visible,\n                    valor: heading_error,\n                    unidad_medida: simbolo,\n                    fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                    severidad: severidad\n                };\n\n                qry_insert = {\n                    clima_alertas_id: alerta_id,\n                    mongodb_id: String(arr._id),\n                    severidad: severidad,\n                    fecha: arr.fecha,\n                    visto: false,\n                    users_id: null,\n                    respuestas_alertas_id: null,\n                    comentario: ''\n                };\n\n                newMsg.push({\n                    insert_data: qry_insert,\n                    checkemail: checkemail,\n                    checkbuzzer: checkbuzzer,\n                    checksms: checksms,\n                    centros_id: centros_id,\n                    ip_port: ip_port,\n                    notificacion: notificacion\n                });\n\n            }\n        }\n    \n    } else {\n        switch (tipo_alerta) {\n            case 'Simple':\n                if (valor1 > 0) {\n                    //positivo\n                    if (arr.datos[variable] >= valor1) {\n                        severidad = 'Rojo';\n                    } else {\n                        if (arr.datos[variable] >= valor2 && arr.datos[variable] < valor1) {\n                            severidad = 'Amarillo';\n                        } else {\n                            severidad = 'Verde';\n                        }\n                    }\n                } else {\n                    //negativo\n                    if (arr.datos[variable] <= valor1) {\n                        severidad = 'Rojo';\n                    } else {\n                        if (arr.datos[variable] <= valor2 && arr.datos[variable] > valor1) {\n                            severidad = 'Amarillo';\n                        } else {\n                            severidad = 'Verde';\n                        }\n                    }\n                }\n                break;\n            case 'Combinada':\n                if (arr.datos[variable] < valor1 || arr.datos[variable] >= valor4) {\n                    severidad = 'Rojo';\n                } else {\n                    if ((arr.datos[variable] >= valor1 && arr.datos[variable] < valor2) || (arr.datos[variable] > valor3 && arr.datos[variable] < valor4)) {\n                        severidad = 'Amarillo';\n                    } else {\n                        severidad = 'Verde';\n                    }\n                }\n                break;\n        }\n        if (severidad != 'Verde' && severidad != '') {\n            notificacion = {\n                centro: centro,\n                variable: variable_visible,\n                valor: arr.datos[variable],\n                unidad_medida: simbolo,\n                fecha: new moment(arr.fecha).format(\"DD/MM/YYYY, h:mm:ss a\"),\n                severidad: severidad\n            };\n            qry_insert = {\n                clima_alertas_id: alerta_id,\n                mongodb_id: String(arr._id),\n                severidad: severidad,\n                fecha: arr.fecha,\n                visto: false,\n                users_id: null,\n                respuestas_alertas_id: null,\n                comentario: ''\n            };\n\n            newMsg.push({\n                insert_data: qry_insert,\n                checkemail: checkemail,\n                checkbuzzer: checkbuzzer,\n                checksms: checksms,\n                centros_id: centros_id,\n                ip_port: ip_port,\n                notificacion: notificacion\n            });\n\n\n        }\n    }\n    \n}\n\n\nreturn [newMsg];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "geolib",
                "module": "geolib"
            },
            {
                "var": "moment",
                "module": "moment"
            }
        ],
        "x": 890,
        "y": 180,
        "wires": [
            [
                "ce998a2a76b1543f"
            ]
        ]
    },
    {
        "id": "a1d55bc4011736fe",
        "type": "mysql",
        "z": "d2c65b34ecc66d63",
        "mydb": "e8b513b0daf9a8a1",
        "name": "",
        "x": 1200,
        "y": 100,
        "wires": [
            [
                "731ec1316215a959"
            ]
        ]
    },
    {
        "id": "f5adec8cd08f6b69",
        "type": "mongodb-objectid",
        "z": "d2c65b34ecc66d63",
        "name": "ObjectId",
        "method": "find",
        "paths": [
            {
                "type": "query",
                "value": "_id"
            }
        ],
        "x": 520,
        "y": 100,
        "wires": [
            [
                "0570db367d5188d0"
            ]
        ]
    },
    {
        "id": "0570db367d5188d0",
        "type": "mongodb-collection",
        "z": "d2c65b34ecc66d63",
        "name": "find clima",
        "config": "babdb35fd23914fd",
        "collection": "clima",
        "method": "find",
        "methodSignature": {
            "query": {
                "value": "query",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 680,
        "y": 100,
        "wires": [
            [
                "0edd95db792dc183"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "ce998a2a76b1543f",
        "type": "mongodb-collection",
        "z": "d2c65b34ecc66d63",
        "name": "Insertar",
        "config": "babdb35fd23914fd",
        "collection": "clima_alertas",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "insert_data",
                "type": "msg"
            },
            "options": {
                "value": "option",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 1080,
        "y": 180,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "72d06a195e5b3e08",
        "type": "function",
        "z": "71984a1f6af3998c",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 280,
        "wires": [
            [
                "f96a784f2b3d950e"
            ]
        ]
    },
    {
        "id": "f96a784f2b3d950e",
        "type": "switch",
        "z": "71984a1f6af3998c",
        "name": "filter collection",
        "property": "payload.modulo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "clima",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sensores",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "energia",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad_detalle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "trencito",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 480,
        "y": 280,
        "wires": [
            [
                "bdc95d68791b359d"
            ],
            [
                "a9ba736af6a50cee"
            ],
            [
                "e169ec9a378dbc86"
            ],
            [
                "ed13abe58c0ac5f4"
            ],
            [
                "6b0a6bd6a238fe28"
            ],
            [
                "134b2ea96889aac8"
            ]
        ]
    },
    {
        "id": "f747204bd20dfbbe",
        "type": "function",
        "z": "71984a1f6af3998c",
        "name": "Clima",
        "func": "msg.topic = 'clima';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "a19cff62828df253",
        "type": "function",
        "z": "71984a1f6af3998c",
        "name": "Sensores",
        "func": "msg.topic = 'sensores';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "b5e44ea6748b355f",
        "type": "function",
        "z": "71984a1f6af3998c",
        "name": "Energia",
        "func": "msg.topic = 'energia';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "bdc95d68791b359d",
        "type": "mongodb-collection",
        "z": "71984a1f6af3998c",
        "name": "Insert-clima",
        "config": "babdb35fd23914fd",
        "collection": "clima",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 770,
        "y": 140,
        "wires": [
            [
                "f747204bd20dfbbe"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "a9ba736af6a50cee",
        "type": "mongodb-collection",
        "z": "71984a1f6af3998c",
        "d": true,
        "name": "Insert-sensores",
        "config": "babdb35fd23914fd",
        "collection": "sensores",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 780,
        "y": 200,
        "wires": [
            [
                "a19cff62828df253"
            ]
        ]
    },
    {
        "id": "e169ec9a378dbc86",
        "type": "mongodb-collection",
        "z": "71984a1f6af3998c",
        "d": true,
        "name": "Insert-energia",
        "config": "babdb35fd23914fd",
        "collection": "energia",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 780,
        "y": 260,
        "wires": [
            [
                "b5e44ea6748b355f"
            ]
        ]
    },
    {
        "id": "ed13abe58c0ac5f4",
        "type": "mongodb-collection",
        "z": "71984a1f6af3998c",
        "d": true,
        "name": "Insert-seguridad",
        "config": "babdb35fd23914fd",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 780,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "6b0a6bd6a238fe28",
        "type": "mongodb-collection",
        "z": "71984a1f6af3998c",
        "d": true,
        "name": "Insert-seguridad_detalle",
        "config": "babdb35fd23914fd",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 810,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "134b2ea96889aac8",
        "type": "mongodb-collection",
        "z": "71984a1f6af3998c",
        "name": "Insert-tren",
        "config": "babdb35fd23914fd",
        "collection": "trencito",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 790,
        "y": 580,
        "wires": [
            [
                "2bf8e2661cce7e61"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "2bf8e2661cce7e61",
        "type": "function",
        "z": "71984a1f6af3998c",
        "name": "Trencito",
        "func": "msg.topic = 'trencito';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "28d6d863981eb37c",
        "type": "function",
        "z": "9eba7b0c87f20961",
        "name": "Verify data",
        "func": "if (!msg.payload) {\n    return [null, msg];\n}\n\nif (msg.payload.length < 1) {\n    return [null, msg];\n}\n\n//All checks have passed (data is ok!)\nreturn [msg, null];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 240,
        "wires": [
            [
                "8479a5feb4f70b3e"
            ]
        ]
    },
    {
        "id": "8479a5feb4f70b3e",
        "type": "switch",
        "z": "9eba7b0c87f20961",
        "name": "filter collection",
        "property": "payload.modulo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "clima",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sensores",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "energia",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "seguridad_detalle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "JaulaSmart",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 440,
        "y": 240,
        "wires": [
            [
                "0b55cf3240788567"
            ],
            [
                "6e48c2c4fb339115"
            ],
            [
                "95af779f027ae0b6"
            ],
            [
                "de0837d3933ec73c"
            ],
            [
                "31cc79d502d79b00"
            ],
            [
                "c774d06af85f2729"
            ]
        ]
    },
    {
        "id": "b4a90b7780db6013",
        "type": "function",
        "z": "9eba7b0c87f20961",
        "name": "Clima",
        "func": "msg.topic = 'clima';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "775a70b7641f4a85",
        "type": "function",
        "z": "9eba7b0c87f20961",
        "name": "Sensores",
        "func": "msg.topic = 'sensores';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 989,
        "y": 154,
        "wires": [
            []
        ]
    },
    {
        "id": "de59143b6d6f7664",
        "type": "function",
        "z": "9eba7b0c87f20961",
        "name": "Energia",
        "func": "msg.topic = 'energia';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "62675e4d59677c70",
        "type": "function",
        "z": "9eba7b0c87f20961",
        "name": "Pasadores",
        "func": "msg.topic = 'pasadores';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "0b55cf3240788567",
        "type": "mongodb-collection",
        "z": "9eba7b0c87f20961",
        "name": "Insert-clima",
        "config": "aea86e27262eaf28",
        "collection": "clima",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 750,
        "y": 80,
        "wires": [
            [
                "b4a90b7780db6013"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "6e48c2c4fb339115",
        "type": "mongodb-collection",
        "z": "9eba7b0c87f20961",
        "name": "Insert-sensores",
        "config": "aea86e27262eaf28",
        "collection": "sensores-iot",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 760,
        "y": 140,
        "wires": [
            [
                "775a70b7641f4a85"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "95af779f027ae0b6",
        "type": "mongodb-collection",
        "z": "9eba7b0c87f20961",
        "name": "Insert-energia",
        "config": "aea86e27262eaf28",
        "collection": "energia",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 760,
        "y": 220,
        "wires": [
            [
                "de59143b6d6f7664"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "de0837d3933ec73c",
        "type": "mongodb-collection",
        "z": "9eba7b0c87f20961",
        "d": true,
        "name": "Insert-seguridad",
        "config": "aea86e27262eaf28",
        "collection": "seguridad",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 760,
        "y": 280,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "31cc79d502d79b00",
        "type": "mongodb-collection",
        "z": "9eba7b0c87f20961",
        "d": true,
        "name": "Insert-seguridad_detalle",
        "config": "aea86e27262eaf28",
        "collection": "seguridad_detalle",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 770,
        "y": 340,
        "wires": [
            []
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "c774d06af85f2729",
        "type": "mongodb-collection",
        "z": "9eba7b0c87f20961",
        "name": "Insert-pasadores",
        "config": "aea86e27262eaf28",
        "collection": "pasadores",
        "method": "insertOne",
        "methodSignature": {
            "doc": {
                "value": "payload",
                "type": "msg"
            },
            "options": {
                "value": "options",
                "type": "msg"
            }
        },
        "outputs": 1,
        "x": 770,
        "y": 420,
        "wires": [
            [
                "62675e4d59677c70"
            ]
        ],
        "outputLabels": [
            "result"
        ]
    },
    {
        "id": "a849768cf3524ab7",
        "type": "function",
        "z": "9eba7b0c87f20961",
        "d": true,
        "name": "function 1",
        "func": "var connectionDetails = {\n    \"wisensor_gmt\": {\n        \"url\": \"mongodb://localhost:27017/wisensor_gmt\",\n        \"collection\": \"clima\"\n    },\n    \"wisensor_ast\": {\n        \"url\": \"mongodb://localhost:27017/wisensor_ast\",\n        \"collection\": \"clima\"\n    },\n    // ... otras conexiones\n};\n\nvar connectionName = msg.connectionName; // Nombre de la conexión proporcionado como mensaje\n\nif (connectionDetails.hasOwnProperty(connectionName)) {\n    // Configuración de conexión válida\n    var config = connectionDetails[connectionName];\n    node.context().flow.set('mongodb_config', config);\n    return msg;\n} else {\n    // Manejar caso de conexión no válida\n    node.error(\"Conexión no válida: \" + connectionName);\n    return null;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 500,
        "wires": [
            [
                "5984d2020bd06b5d"
            ]
        ]
    },
    {
        "id": "5984d2020bd06b5d",
        "type": "debug",
        "z": "9eba7b0c87f20961",
        "d": true,
        "name": "debug 235",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 500,
        "wires": []
    },
    {
        "id": "da697c392e471bde",
        "type": "mqtt in",
        "z": "fa4185535df52994",
        "name": "MQTT-GMT",
        "topic": "mqtt_gmt",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "70f45d5a7f5d68bb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 180,
        "wires": [
            [
                "2a0c86a3a87dbb9c",
                "729b65cc8f326f39"
            ]
        ]
    },
    {
        "id": "879e6f0fc6754efd",
        "type": "comment",
        "z": "fa4185535df52994",
        "name": "credenciales",
        "info": "user: admin\npass: dbrootAst",
        "x": 150,
        "y": 100,
        "wires": []
    },
    {
        "id": "5adb5b2007baee0d",
        "type": "mqtt in",
        "z": "fa4185535df52994",
        "name": "MQTT-AST",
        "topic": "mqtt_ast",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "70f45d5a7f5d68bb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 260,
        "wires": [
            [
                "4369aa886a92771e",
                "cff96e93f3ea2ca4"
            ]
        ]
    },
    {
        "id": "2a0c86a3a87dbb9c",
        "type": "subflow:9eba7b0c87f20961",
        "z": "fa4185535df52994",
        "name": "",
        "x": 410,
        "y": 180,
        "wires": [
            [
                "34ad2a343b472ffa"
            ]
        ]
    },
    {
        "id": "4369aa886a92771e",
        "type": "subflow:71984a1f6af3998c",
        "z": "fa4185535df52994",
        "name": "",
        "x": 430,
        "y": 260,
        "wires": [
            [
                "261a90b62b5bb4a0",
                "d0520b7f7feac192"
            ]
        ]
    },
    {
        "id": "261a90b62b5bb4a0",
        "type": "subflow:d2c65b34ecc66d63",
        "z": "fa4185535df52994",
        "name": "",
        "x": 620,
        "y": 260,
        "wires": [
            [
                "594d05a1ce8cd38a"
            ]
        ]
    },
    {
        "id": "594d05a1ce8cd38a",
        "type": "subflow:a68f9a56f13d9015",
        "z": "fa4185535df52994",
        "d": true,
        "name": "",
        "x": 840,
        "y": 260,
        "wires": [
            [
                "af8cb8e556253a15"
            ],
            [
                "81bea788ed4914d1"
            ],
            [
                "aee3f76e35f62cbc"
            ]
        ]
    },
    {
        "id": "af8cb8e556253a15",
        "type": "function",
        "z": "fa4185535df52994",
        "d": true,
        "name": "content email",
        "func": "var noti = msg.notificacion;\nvar alerta = '';\nif(noti.severidad == 'Rojo'){\n    alerta = 'crítica';\n} else {\n    alerta = 'de atención';\n}\n\nvar valor = parseFloat(noti.valor).toFixed(2);\n\nmsg = {\n    payload:\"Se ha encontrado una alerta \"+alerta+\" con fecha: \"+noti.fecha+\", en la variable de: \"+noti.variable+\" con un valor de : \"+valor+noti.unidad_medida,\n    topic:\"Alerta de clima - \"+noti.centro+\" - \"+noti.variable,\n    to: \"jgarrido@ast.cl\",\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "1e57db77dfa6e5b4",
        "type": "mqtt out",
        "z": "fa4185535df52994",
        "d": true,
        "name": "",
        "topic": "buzzer",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d4811ab7395e34dc",
        "x": 1330,
        "y": 280,
        "wires": []
    },
    {
        "id": "81bea788ed4914d1",
        "type": "switch",
        "z": "fa4185535df52994",
        "d": true,
        "name": "filter ip",
        "property": "ip_port",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "172.16.10.18",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1030,
        "y": 280,
        "wires": [
            [
                "22dbd591b46c8e7b"
            ]
        ]
    },
    {
        "id": "22dbd591b46c8e7b",
        "type": "function",
        "z": "fa4185535df52994",
        "d": true,
        "name": "send data",
        "func": "var newMsg = [];\nvar notification = msg.notificacion;\nnewMsg.push({\n    payload: {\n        action: 1,\n        data : notification\n    }\n});\n\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 280,
        "wires": [
            [
                "1e57db77dfa6e5b4"
            ]
        ]
    },
    {
        "id": "04fc8ea42ee5a33a",
        "type": "mqtt out",
        "z": "fa4185535df52994",
        "d": true,
        "name": "",
        "topic": "buzzer",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f8d583349e2ec5d4",
        "x": 1330,
        "y": 340,
        "wires": []
    },
    {
        "id": "aee3f76e35f62cbc",
        "type": "switch",
        "z": "fa4185535df52994",
        "d": true,
        "name": "filter ip",
        "property": "ip_port",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "172.15.10.18",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1030,
        "y": 340,
        "wires": [
            [
                "4ea953eb38bb5010"
            ]
        ]
    },
    {
        "id": "4ea953eb38bb5010",
        "type": "function",
        "z": "fa4185535df52994",
        "d": true,
        "name": "send data",
        "func": "var newMsg = [];\nvar notification = msg.notificacion;\nnewMsg.push({\n    payload: {\n        action: 1,\n        data : notification\n    }\n});\n\nreturn [newMsg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 340,
        "wires": [
            [
                "04fc8ea42ee5a33a",
                "61fa493226ef2d4d"
            ]
        ]
    },
    {
        "id": "61fa493226ef2d4d",
        "type": "debug",
        "z": "fa4185535df52994",
        "d": true,
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 420,
        "wires": []
    },
    {
        "id": "f7456828dac6e591",
        "type": "debug",
        "z": "fa4185535df52994",
        "d": true,
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 180,
        "wires": []
    },
    {
        "id": "34ad2a343b472ffa",
        "type": "subflow:546efd75fe681e29",
        "z": "fa4185535df52994",
        "name": "",
        "x": 610,
        "y": 180,
        "wires": [
            [
                "f7456828dac6e591"
            ]
        ]
    },
    {
        "id": "db427ca10d9d1086",
        "type": "mqtt in",
        "z": "fa4185535df52994",
        "name": "MQTT-MOWI",
        "topic": "mqtt_mowi",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "70f45d5a7f5d68bb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 380,
        "wires": [
            [
                "94cf061ec49e6e8b",
                "0dbdce4689843d82"
            ]
        ]
    },
    {
        "id": "94cf061ec49e6e8b",
        "type": "subflow:1bfaf0ee9cf5edea",
        "z": "fa4185535df52994",
        "name": "",
        "x": 460,
        "y": 380,
        "wires": [
            [
                "22fec397b408d678",
                "d332321a7fcaf0dc"
            ]
        ]
    },
    {
        "id": "22fec397b408d678",
        "type": "subflow:bf38bc9e8a01a671",
        "z": "fa4185535df52994",
        "name": "",
        "x": 740,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "fcced8747cf17869",
        "type": "mqtt in",
        "z": "fa4185535df52994",
        "name": " MQTT_AQUACHILE",
        "topic": "mqtt_aquachile",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "70f45d5a7f5d68bb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 560,
        "wires": [
            [
                "721d424b17c5deed",
                "56559927c3b8e66f",
                "0dbdce4689843d82"
            ]
        ]
    },
    {
        "id": "721d424b17c5deed",
        "type": "subflow:adde387b97c1cef1",
        "z": "fa4185535df52994",
        "name": "",
        "x": 560,
        "y": 540,
        "wires": [
            [
                "ad5336da4e800911"
            ]
        ]
    },
    {
        "id": "ad5336da4e800911",
        "type": "subflow:887ae0d1a8656db5",
        "z": "fa4185535df52994",
        "name": "",
        "x": 870,
        "y": 560,
        "wires": [
            [
                "502e2ed0c11f865c"
            ]
        ]
    },
    {
        "id": "502e2ed0c11f865c",
        "type": "debug",
        "z": "fa4185535df52994",
        "d": true,
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 640,
        "wires": []
    },
    {
        "id": "56559927c3b8e66f",
        "type": "debug",
        "z": "fa4185535df52994",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 620,
        "wires": []
    },
    {
        "id": "739e0b9fded94c06",
        "type": "e-mail",
        "z": "fa4185535df52994",
        "d": true,
        "server": "smtp.gmail.com",
        "port": "465",
        "name": "comex@ast.cl",
        "dname": "",
        "x": 1360,
        "y": 120,
        "wires": []
    },
    {
        "id": "729b65cc8f326f39",
        "type": "debug",
        "z": "fa4185535df52994",
        "name": "debug 231",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 100,
        "wires": []
    },
    {
        "id": "d0520b7f7feac192",
        "type": "debug",
        "z": "fa4185535df52994",
        "name": "debug 233",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 320,
        "wires": []
    },
    {
        "id": "d332321a7fcaf0dc",
        "type": "debug",
        "z": "fa4185535df52994",
        "name": "debug 234",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 460,
        "wires": []
    },
    {
        "id": "cff96e93f3ea2ca4",
        "type": "debug",
        "z": "fa4185535df52994",
        "name": "debug 236",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 320,
        "wires": []
    },
    {
        "id": "0dbdce4689843d82",
        "type": "debug",
        "z": "fa4185535df52994",
        "name": "debug 237",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 500,
        "wires": []
    },
    {
        "id": "ab3a861b1083d2cb",
        "type": "comment",
        "z": "fa4185535df52994",
        "name": "Credenciales",
        "info": "AST@_2023",
        "x": 1290,
        "y": 80,
        "wires": []
    }
]